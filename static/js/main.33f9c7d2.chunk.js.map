{"version":3,"sources":["components/AutoDismissAlert/AutoDismissAlert.js","components/Header/Header.js","apiConfig.js","api/auth.js","components/auth/SignUp.js","components/AutoDismissAlert/messages.js","components/auth/SignIn.js","components/auth/SignOut.js","components/auth/ChangePassword.js","components/Metronome/AdjustTempo.jsx","components/Metronome/TempoSlider.jsx","components/Metronome/AdjustBeats.jsx","components/Metronome/Measures.jsx","components/Metronome/BpmDisplay.jsx","components/Metronome/StartStop.jsx","components/Metronome/RandomNote.jsx","components/Metronome/Metronome.jsx","api/presets.js","components/Presets/DropDown.jsx","components/Presets/PresetForm.jsx","App.js","index.js"],"names":["AutoDismissAlert","variant","heading","message","useState","show","setShow","timeoutId","setTimeoutId","console","log","useEffect","id","setTimeout","clearTimeout","Alert","onClose","dismissible","className","Heading","authenticatedOptions","to","unauthenticatedOptions","alwaysOptions","settings","Header","user","Navbar","expand","Container","Brand","style","color","textDecoration","Nav","Collapse","email","apiUrls","apiUrl","window","location","hostname","signUp","password","passwordConfirmation","axios","post","credentials","password_confirmation","signIn","signOut","delete","headers","Authorization","token","changePassword","oldPassword","newPassword","patch","passwords","old","new","SignUp","msgAlert","setUser","setEmail","setPassword","setPasswordConfirmation","shouldNavigate","setShouldNavigate","onSignUp","event","a","preventDefault","res","data","Form","onSubmit","Group","controlId","Label","Control","required","type","name","value","placeholder","onChange","target","Button","SignIn","onSignIn","SignOut","clearUser","performSignOut","ChangePassword","setOldPassword","setNewPassword","onChangePassword","AdjustTempo","props","onClick","text","TempoSlider","decreaseTempo","tempo","min","max","step","increaseTempo","AdjustBeats","Measures","decreaseBeats","measures","increaseBeats","counter","BpmDisplay","StartStop","toggleTimer","total","RandomNote","currentNote","toUpperCase","randomNote","Metronome","notesBucket","Math","floor","random","setCurrentNote","setRandomNote","first","setFirst","rand","length","allNotes","interval","setCounter","setNotesBucket","active","setInterval","setTotal","clearInterval","i","arr","checkedState","map","note","push","join","slideTempo","createPreset","current","preset","owner","notes","checks","updatePreset","presetID","then","response","catch","error","deletePreset","loadPreset","get","DropDown","presetsArray","presets","_id","setPresetIndex","document","getElementById","selectedIndex","hidden","PresetForm","presetIndex","setPresets","presetName","setPresetName","presetsList","addToPresets","newPreset","Object","entries","handleSelectNewPreset","index","querySelector","setCheckedState","setTempo","setMeasures","extractNotes","checkState","check","splice","nativeEvent","submitter","checked","position","updatedCheckedState","item","handleCheckChange","htmlFor","updatedPreset","substring","App","msgAlerts","setMsgAlerts","setActive","uuid","tempoDisplay","tempoText","decreaseTempoBtn","increaseTempoBtn","tempoSlider","startStopBtn","subtractBeats","BpmDisplayElement","but","beatsDisplay","path","element","parseInt","stat","appJsx","basename","process","ReactDOM","render"],"mappings":"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","file":"static/js/main.33f9c7d2.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\n\n// We have imported some custom styling for this alert\n// Which will be off-topic, unless extra time at the end of the lesson.\nimport './AutoDismissAlert.scss'\nimport Alert from 'react-bootstrap/Alert'\n\nfunction AutoDismissAlert ({ variant, heading, message }) {\n  // create `show` state. When this is false, the Alert will be hidden from the screen.\n  const [show, setShow] = useState(true)\n  // We are going to create a timer that will stop showing the alert after 5 seconds\n  // We store the timeoutId, incase we need to cancel the timer early (because the AutoDismissAlert was unmounted)\n  const [timeoutId, setTimeoutId] = useState(null)\n  console.log(timeoutId)\n\n  // this will run once, when the component is mounted (added) to the screen\n  // it runs once, because it has an empty dependency array as the second argument\n  useEffect(() => {\n    // We want to create a timer, that closes the alert after 5 seconds (5000 milliseconds)\n    const id = setTimeout(() => setShow(false), 5000)\n    // Keep track of the timeoutId\n    setTimeoutId(id)\n\n    // We want to clean up the timer\n    // this is like componentWillUnmount, it is run whenever the component is unmounted\n    // and its also run before an effect is re-created\n    return function cleanup () {\n      clearTimeout(timeoutId)\n    }\n  }, [])\n\n  return (\n    <Alert\n      /* This is the color, make it the bootstrap passed down as a prop */\n      variant={variant}\n      /* This function sets the show state to false, whenever the x in the top right is clicked. */\n      onClose={() => setShow(false)}\n      /* This adds a close button to our alert */\n      dismissible\n      /* The show property will display the alert if true, and hide it if false. */\n      show={show}\n    >\n      <div className='container'>\n        <Alert.Heading>{heading}</Alert.Heading>\n        <p className='alert-body'>{message}</p>\n      </div>\n    </Alert>\n  )\n}\n\nexport default AutoDismissAlert\n","import React from 'react'\nimport Nav from 'react-bootstrap/Nav'\nimport Navbar from 'react-bootstrap/Navbar'\nimport Container from 'react-bootstrap/Container'\nimport { Link, NavLink } from 'react-router-dom'\n\nconst authenticatedOptions = (\n  <>\n    <NavLink to='/change-password' className='nav-link'>Change Password</NavLink>\n    <NavLink to='/sign-out' className='nav-link'>Sign Out</NavLink>\n  </>\n)\n\nconst unauthenticatedOptions = (\n  <>\n    <NavLink to='/sign-up' className='nav-link'>Sign Up</NavLink>\n    <NavLink to='/sign-in' className='nav-link'>Sign In</NavLink>\n  </>\n)\n\nconst alwaysOptions = (\n  <>\n    <NavLink to='/' className='nav-link'>Home</NavLink>\n  </>\n)\n\nconst settings = (\n  <>\n    <NavLink to='/settings' className='nav-link'>Settings</NavLink>\n  </>\n)\n\nconst Header = ({ user }) => (\n  <>\n    <Navbar className=\"color-nav\" variant='dark' expand='md'>\n      <Container>\n        <Navbar.Brand>\n          <Link to='/' style={{ color: '#FFF', textDecoration: 'none' }}>metronome</Link>\n        </Navbar.Brand><Nav className='ms-auto'>\n          {settings}\n        </Nav>\n        {/* <Navbar.Toggle aria-controls='basic-navbar-nav' /> */}\n        <Navbar.Collapse id='basic-navbar-nav'>\n          <Nav className='ms-auto'>\n            {user && (\n              <span className='navbar-text me-2'>Welcome, {user.email}</span>\n            )}\n            {alwaysOptions}\n            {user ? authenticatedOptions : unauthenticatedOptions}\n          </Nav>\n        </Navbar.Collapse>\n      </Container>\n    </Navbar>\n    {/* <Navbar bg='primary' variant='dark' expand='md'>\n    </Navbar> */}\n  </>\n)\n\nexport default Header\n","let apiUrl\nconst apiUrls = {\n  production: 'https://calm-scrubland-98993.herokuapp.com/',\n  development: 'http://localhost:4741'\n}\n\nif (window.location.hostname === 'localhost') {\n  apiUrl = apiUrls.development\n} else {\n  apiUrl = apiUrls.production\n}\n\nexport default apiUrl\n","import apiUrl from '../apiConfig'\nimport axios from 'axios'\n\nexport const signUp = (email, password, passwordConfirmation) => {\n  return axios.post(apiUrl + '/sign-up/', {\n    credentials: {\n      email,\n      password,\n      password_confirmation: passwordConfirmation\n    }\n  })\n}\n\nexport const signIn = (email, password) => {\n  return axios.post(apiUrl + '/sign-in/', {\n    credentials: {\n      email,\n      password\n    }\n  })\n}\n\nexport const signOut = user => {\n  return axios.delete(apiUrl + '/sign-out/', {\n    headers: {\n      Authorization: `Bearer ${user.token}`\n    }\n  })\n}\n\nexport const changePassword = (oldPassword, newPassword, user) => {\n  return axios.patch(\n    apiUrl + '/change-password/',\n    {\n      passwords: {\n        old: oldPassword,\n        new: newPassword\n      }\n    },\n    {\n      headers: {\n        Authorization: `Bearer ${user.token}`\n      }\n    }\n  )\n}\n","import React, { useState } from 'react'\nimport { Navigate } from 'react-router-dom'\n\nimport { signUp, signIn } from '../../api/auth'\nimport { signUpSuccess, signUpFailure } from '../AutoDismissAlert/messages'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nconst SignUp = ({ msgAlert, setUser }) => {\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [passwordConfirmation, setPasswordConfirmation] = useState('')\n  const [shouldNavigate, setShouldNavigate] = useState(false)\n\n  const onSignUp = async (event) => {\n    event.preventDefault()\n\n    try {\n      await signUp(email, password, passwordConfirmation)\n      const res = await signIn(email, password)\n      setUser(res.data.user)\n      msgAlert({\n        heading: 'Sign Up Success',\n        message: signUpSuccess,\n        variant: 'success'\n      })\n      setShouldNavigate(true)\n    } catch (error) {\n      setEmail('')\n      setPassword('')\n      setPasswordConfirmation('')\n      msgAlert({\n        heading: 'Sign Up Failed with error: ' + error.message,\n        message: signUpFailure,\n        variant: 'danger'\n      })\n    }\n  }\n\n  if (shouldNavigate) {\n    return <Navigate to='/' />\n  }\n\n  return (\n    <div className='row'>\n      <div className='col-sm-10 col-md-8 mx-auto mt-5'>\n        <h3>Sign Up</h3>\n        <Form onSubmit={onSignUp}>\n          <Form.Group controlId='email'>\n            <Form.Label>Email address</Form.Label>\n            <Form.Control\n              required\n              type='email'\n              name='email'\n              value={email}\n              placeholder='Enter email'\n              onChange={event => setEmail(event.target.value)}\n            />\n          </Form.Group>\n          <Form.Group controlId='password'>\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              required\n              name='password'\n              value={password}\n              type='password'\n              placeholder='Password'\n              onChange={event => setPassword(event.target.value)}\n            />\n          </Form.Group>\n          <Form.Group controlId='passwordConfirmation'>\n            <Form.Label>Password Confirmation</Form.Label>\n            <Form.Control\n              required\n              name='passwordConfirmation'\n              value={passwordConfirmation}\n              type='password'\n              placeholder='Confirm Password'\n              onChange={event => setPasswordConfirmation(event.target.value)}\n            />\n          </Form.Group>\n          <Button className='mt-2' variant='primary' type='submit'>Submit</Button>\n        </Form>\n      </div>\n    </div>\n  )\n}\n\nexport default SignUp\n","export const signUpSuccess = 'Succesfully registered! You\\'ve been signed in as well.'\nexport const signUpFailure = 'Registration failed. Email may be taken, or passwords don\\'t match.'\nexport const signInSuccess = 'Welcome!'\nexport const signInFailure = 'Failed to sign in. Check your email and password and try again.'\nexport const signOutSuccess = 'Come back soon!'\nexport const changePasswordSuccess = 'Password changed successfully!'\nexport const changePasswordFailure = 'Failed to change passwords. Check your old password and try again.'\n","import React, { useState } from 'react'\nimport { Navigate } from 'react-router-dom'\n\nimport { signIn } from '../../api/auth'\nimport { signInSuccess, signInFailure } from '../AutoDismissAlert/messages'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nconst SignIn = ({ msgAlert, setUser }) => {\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [shouldNavigate, setShouldNavigate] = useState(false)\n\n  const onSignIn = async (event) => {\n    event.preventDefault()\n\n    try {\n      const res = await signIn(email, password)\n      setUser(res.data.user)\n\n      msgAlert({\n        heading: 'Sign In Success',\n        message: signInSuccess,\n        variant: 'success'\n      })\n      setShouldNavigate(true)\n    } catch (error) {\n      setEmail('')\n      setPassword('')\n      msgAlert({\n        heading: 'Sign In Failed with error: ' + error.message,\n        message: signInFailure,\n        variant: 'danger'\n      })\n    }\n  }\n\n  if (shouldNavigate) {\n    return <Navigate to='/' />\n  }\n\n  return (\n    <div className='row'>\n      <div className='col-sm-10 col-md-8 mx-auto mt-5'>\n        <h3>Sign In</h3>\n        <Form onSubmit={onSignIn}>\n          <Form.Group controlId='email'>\n            <Form.Label>Email address</Form.Label>\n            <Form.Control\n              required\n              type='email'\n              name='email'\n              value={email}\n              placeholder='Enter email'\n              onChange={event => setEmail(event.target.value)}\n            />\n          </Form.Group>\n          <Form.Group controlId='password'>\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              required\n              name='password'\n              value={password}\n              type='password'\n              placeholder='Password'\n              onChange={event => setPassword(event.target.value)\n              }\n            />\n          </Form.Group>\n          <Button className='mt-2' variant='primary' type='submit'>Submit</Button>\n        </Form>\n      </div>\n    </div>\n  )\n}\n\nexport default SignIn\n","import React, { useState, useEffect } from 'react'\nimport { Navigate } from 'react-router-dom'\n\nimport { signOut } from '../../api/auth'\nimport { signOutSuccess } from '../AutoDismissAlert/messages'\n\nconst SignOut = ({ msgAlert, clearUser, user }) => {\n  const [shouldNavigate, setShouldNavigate] = useState(false)\n\n  // this is like componentDidMount, it will run whenever the SignOut component\n  // is mounted (or added) to the page\n  useEffect(() => {\n  // for performance reasons, when using `useEffect`\n  // it's a best practice to create a helper function w/ async/await\n    const performSignOut = async () => {\n    // make a signOut axios request\n      await signOut(user)\n\n      msgAlert({\n        heading: 'Signed Out Successfully',\n        message: signOutSuccess,\n        variant: 'success'\n      })\n\n      // reset the user back to its initial value\n      clearUser()\n      setShouldNavigate(true)\n    }\n    performSignOut()\n  }, [])\n\n  if (!user || shouldNavigate) {\n    return <Navigate to='/' />\n  }\n\n  return ''\n}\n\nexport default SignOut\n","import React, { useState } from 'react'\nimport { Navigate } from 'react-router-dom'\n\nimport { changePassword } from '../../api/auth'\nimport { changePasswordSuccess, changePasswordFailure } from '../AutoDismissAlert/messages'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nconst ChangePassword = ({ msgAlert, user }) => {\n  const [oldPassword, setOldPassword] = useState('')\n  const [newPassword, setNewPassword] = useState('')\n  const [shouldNavigate, setShouldNavigate] = useState(false)\n\n  const onChangePassword = async (event) => {\n    event.preventDefault()\n\n    try {\n      await changePassword(oldPassword, newPassword, user)\n      msgAlert({\n        heading: 'Change Password Success',\n        message: changePasswordSuccess,\n        variant: 'success'\n      })\n      setShouldNavigate(true)\n    } catch (error) {\n      setOldPassword('')\n      setNewPassword('')\n      msgAlert({\n        heading: 'Change Password Failed with error: ' + error.message,\n        message: changePasswordFailure,\n        variant: 'danger'\n      })\n    }\n  }\n\n  if (!user || shouldNavigate) {\n    return <Navigate to='/' />\n  }\n\n  return (\n    <div className='row'>\n      <div className='col-sm-10 col-md-8 mx-auto mt-5'>\n        <h3>Change Password</h3>\n        <Form onSubmit={onChangePassword}>\n          <Form.Group controlId='oldPassword'>\n            <Form.Label>Old password</Form.Label>\n            <Form.Control\n              required\n              name='oldPassword'\n              value={oldPassword}\n              type='password'\n              placeholder='Old Password'\n              onChange={event => setOldPassword(event.target.value)}\n            />\n          </Form.Group>\n          <Form.Group controlId='newPassword'>\n            <Form.Label>New Password</Form.Label>\n            <Form.Control\n              required\n              name='newPassword'\n              value={newPassword}\n              type='password'\n              placeholder='New Password'\n              onChange={event => setNewPassword(event.target.value)\n              }\n            />\n          </Form.Group>\n          <Button className='mt-2' variant='primary' type='submit'>Submit</Button>\n        </Form>\n      </div>\n    </div>\n  )\n}\n\nexport default ChangePassword\n","import React from 'react'\n\nimport '../../index.scss'\n\nconst AdjustTempo = (props) => (\n  <span className={props.className} onClick={props.onClick}>{props.text}</span>\n)\n\nexport default AdjustTempo\n","import React from 'react'\n\nimport AdjustTempo from './AdjustTempo'\n\nimport '../../index.scss'\n\nconst TempoSlider = (props) => {\n  const decreaseTempo = () => {\n    // console.log('yup')\n    props.decreaseTempo()\n  }\n  const increaseTempo = () => {\n    // console.log('yup')\n    props.increaseTempo()\n  }\n  const slideTempo = () => {\n    props.onChange()\n  }\n  return (\n    <>\n      <div className = \"tempo-slider\">\n        <AdjustTempo className=\"adjust decrease-tempo\" text=\"-\" onClick = {decreaseTempo} />\n        <input type=\"range\" value={props.tempo} min=\"20\" max=\"220\" step=\"1\" className=\"slider\" onChange = {slideTempo}></input>\n        <AdjustTempo className=\"adjust increase-tempo\" text=\"+\" onClick = {increaseTempo}></AdjustTempo>\n      </div>\n    </>\n  )\n}\n\nexport default TempoSlider\n","import React from 'react'\n\nimport '../../index.scss'\n\nconst AdjustBeats = (props) => (\n  <span className={props.className} onClick={props.onClick}>{props.text}</span>\n)\n\nexport default AdjustBeats\n","import React from 'react'\n\nimport '../../index.scss'\n\nimport AdjustBeats from './AdjustBeats'\n\nconst Measures = (props) => {\n  const decreaseBeats = () => {\n    // console.log('yup')\n    props.decreaseBeats()\n  }\n  const increaseBeats = () => {\n    // console.log('yup')\n    props.increaseBeats()\n  }\n\n  return (\n    <>\n      <div className=\"bpm-display \">{props.tempo}</div>\n      <div className=\"measures-count\">\n        <AdjustBeats className=\"adjust stepper subtract-beats\" text=\"-\" onClick = {decreaseBeats}></AdjustBeats>\n        <span className='beats-display'> {props.measures} </span>\n        <AdjustBeats className=\"adjust stepper add-beats\" text=\"+\" onClick = {increaseBeats}></AdjustBeats>\n      </div>\n      <div className='counter'><div>{props.counter + 1}</div></div>\n    </>\n  )\n}\n\nexport default Measures\n","import React from 'react'\n\nimport '../../index.scss'\n\nconst BpmDisplay = (props) => (\n  <>\n    <div className=\"bpm-display \">{props.tempo}</div>\n  </>\n)\n\nexport default BpmDisplay\n","import React from 'react'\n\nconst StartStop = (props) => (\n  <>\n    <button className=\"start-stop\" onClick = {props.toggleTimer}>{props.total}</button>\n  </>\n)\n\nexport default StartStop\n","import React from 'react'\n\nconst RandomNote = (props) => {\n  return (\n    <>\n      <div className = \"notes-walk\">{props.currentNote.toUpperCase()} {'-> '}{props.randomNote.toUpperCase()}</div>\n      {/* <h1>{props.currentNote} {'-' + '-'.repeat((props.counter))}{'> '}{props.randomNote}</h1> */}\n    </>\n  )\n}\n\nexport default RandomNote\n","// import React from 'react'\nimport React, { useState, useEffect } from 'react'\n\nimport TempoSlider from './TempoSlider'\nimport Measures from './Measures'\nimport BpmDisplay from './BpmDisplay'\nimport StartStop from './StartStop'\n// import PresetForm from '../Presets/PresetForm'\nimport RandomNote from '../Metronome/RandomNote'\n\nimport '../../index.scss'\n\nconst Metronome = (props) => {\n  // const [presetIndex] = useState(0)\n  const [currentNote, setCurrentNote] = useState(props.notesBucket[Math.floor(Math.random() * 12)])\n  const [randomNote, setRandomNote] = useState(props.notesBucket[Math.floor(Math.random() * 12)])\n  const [first, setFirst] = useState(true)\n  // setCurrentNote(props.notesBucket)\n  // setRandomNote(props.notesBucket)\n  // const [intervalID,  setIntervalID] = useState(0)\n  // const toggleTimer = () => {\n  //   props.toggleTimer()\n  // }\n\n  // function Timer (callback, timeInterval, errorCallback) {\n  //   this.timeout = ''\n  //   this.timeoutID = ''\n  //   this.timeInterval = timeInterval\n  //   this.start = () => {\n  //     this.expected = Date.now() + this.timeInterval\n  //     this.timeout = setTimeout(this.round, this.timeInterval)\n  //     this.timeoutID = this.timeout\n  //     console.log('Started')\n  //     console.log(this.timeout)\n  //     return this.timeout\n  //   }\n  //   this.stop = () => {\n  //     console.log(this.timeout)\n  //     clearTimeout(this.timeout)\n  //     console.log(this.timeout)\n  //     console.log('Stopped')\n  //   }\n  //   this.round = () => {\n  //     const drift = Date.now() - this.expected\n  //     if (drift > this.timeInerval) {\n  //       errorCallback()\n  //     }\n  //     callback()\n  //     this.expected += this.timeInterval\n  //     console.log(drift)\n  //     console.log(this.timeInterval - drift)\n  //     console.log(this.timeout)\n  //     this.timeout = setTimeout(this.round, this.timeInterval - drift)\n  //   }\n  //   this.nah = () => {\n  //     console.log('nah' * 50)\n  //   }\n  // }\n  // const addResource =\n  // console.log(myTimer)\n  // myTimer.start()\n  // let tempo = 120\n  // let measures = 4\n\n  // const click1 = new Audio('/click1.wav')\n  // const click2 = new Audio('/click2.wav')\n\n  // if (active === 1) { myTimer.start() }\n  // if (active === 0) { myTimer.stop() }\n\n  // const myTimer = new Timer(() => { console.log(props.tempo) }, 1000)\n\n  // if (active === 0) {\n  //   myTimer.stop()\n  // } else {\n  //   myTimer.start()\n  // }\n  // console.log(myTimer)\n\n  // const stopTimer = () => {\n  //   myTimer.start()\n  // }\n  // console.log(startTimer)\n  // console.log(stopTimer)\n  // useEffect(() => {\n  // })\n  const rand = Math.floor(Math.random() * props.notesBucket.length)\n  const allNotes = ['a', 'a#', 'b', 'c', 'c#', 'd', 'd#', 'e', 'f', 'f#', 'g', 'g#']\n  const interval = ''\n  console.log(interval)\n\n  useEffect((interval) => {\n    if (props.notesBucket.length > 0) {\n      if (props.counter % props.measures === 0 && props.counter > 0) {\n        if (first) {\n          setFirst(true)\n          setRandomNote(props.notesBucket[rand])\n          setCurrentNote(randomNote)\n        }\n        props.setCounter(0)\n        // setFirst(false)\n        console.log(props.measures)\n        console.log(props.setNotesBucket)\n        console.log(first)\n        console.log(props.measures % props.setNotesBucket)\n      }\n      if (props.active) {\n        interval = setInterval(() => {\n          props.setTotal(props.total + 1)\n          props.setCounter(props.counter + 1)\n          console.log(props.tempo)\n          console.log(props.tempo * 60)\n          console.log(props.setNotesBucket)\n        }, 60000 / props.tempo)\n      // console.log(interval)\n      // setIntervalID(interval)\n      }\n      return () => {\n        // props.setCounter(0)\n        clearInterval(interval)\n      }\n    }\n  }\n  )\n\n  useEffect(() => {\n    clearInterval(interval)\n    props.setCounter(0)\n  }, [props.active])\n\n  useEffect(() => {\n    let i\n    console.log(i)\n    const arr = []\n    // console.log(arr)\n    props.checkedState.map((note, i) => {\n      i++\n      if (note) {\n        arr.push(allNotes[i - 1])\n      }\n      // console.log(note)\n      // console.log(notes[i])\n      return allNotes[i]\n    })\n    console.log(arr)\n    props.setNotesBucket(arr)\n    console.log(props.notesBucket)\n  }, [props.checkedState])\n  // }, [props.active === 1])\n  // l\n  // const startMetronome = (event) => {\n  //   event.preventDefault()\n  //   const interval = setInterval(() => {\n  //     props.setCounter(timer + 1)\n  //     console.log(props.tempo)\n  //     console.log(props.tempo * 60)\n  //     console.log(timer)\n  //   }, 60000 / props.tempo)\n  //   console.log(interval)\n  //   // setIntervalID(interval)\n  // }\n  // const stopMetronome = (event) => {\n  //   event.preventDefault()\n  //   // clearInterval(intervalID)\n  // }\n  // const resetCount = (event) => {\n  //   event.preventDefault()\n  //   // props.setCounter(0)\n  // }\n  // useEffect((callback = () => console.log('yup'), tempo = props, errorCallback) => {\n  //   let timeout\n  //   let timeoutID\n  //   const timeInterval = tempo\n  //   let expected\n  //   console.log('timeout: ' + timeout)\n  //   console.log('timeoutID: ' + timeoutID)\n  //   console.log('timeoutInterval: ' + timeInterval)\n  //   console.log('expected: ' + expected)\n  //   const start = (timeout, timeoutID) => {\n  //     expected = Date.now() + timeInterval\n  //     timeout = setTimeout(round, timeInterval)\n  //     timeoutID = timeout\n  //     console.log('Started')\n  //     return timeout\n  //   }\n  //   const round = (timeout, timeoutID) => {\n  //     console.log('round')\n  //     callback()\n  //     const drift = Date.now() - expected\n  //     if (drift > timeInterval) {\n  //       errorCallback()\n  //     }\n  //     console.log(drift)\n  //     console.log(timeInterval - drift)\n  //     expected += timeInterval\n  //     timeout = setTimeout(round, timeInterval - drift)\n  //     timeoutID = timeout\n  //   }\n\n  //   console.log(start)\n  //   console.log(round)\n  //   return (\n  //     clearTimeout(timeoutID)\n  //   )\n  // })\n  // useEffect((callback, tempo = 1000, errorCallback) => {\n  //   let timeout\n  //   let timeoutID\n  //   const timeInterval = tempo\n  //   let expected\n  //   console.log(timeout)\n  //   console.log(timeoutID)\n  //   console.log(timeInterval)\n  //   console.log(expected)\n  //   const start = (timeout, timeoutID) => {\n  //     expected = Date.now() + timeInterval\n  //     timeout = setTimeout(round, timeInterval)\n  //     timeoutID = timeout\n  //     console.log('Started')\n  //     console.log(timeout)\n  //     return timeout\n  //   }\n  //   const round = () => {\n  //     const drift = Date.now() - expected\n  //     if (drift > timeInterval) {\n  //       errorCallback()\n  //     }\n  //     expected += timeInterval\n  //     console.log(drift)\n  //     console.log(timeInterval - drift)\n  //     console.log(timeout)\n  //     timeout = setTimeout(round, timeInterval - drift)\n  //   }\n\n  //   start()\n  //   console.log(round)\n  //   return (\n  //     clearTimeout(timeoutID)\n  //   )\n  // })\n  // useEffect(() => {\n  //   const timer = setTimeout(() => {\n  //     console.log('runner')\n  //     setTimeout(console.log('ran'), 1000)\n  //   }, 1000)\n  //   return () => {\n  //     clearTimeout(timer)\n  //   }\n  // }, [props.active])\n  // useEffect(() => {\n  //   myTimer.start()\n  //   // console.log('success')\n  //   // // why can't i construct this object\n  //   // const myTimer = new Timer(() => { console.log('it ran!') }, 1000)\n  //   return () => {\n  //     myTimer.start()\n  //     console.log('unmounted')\n  //   }\n  // }, [props.active])\n  // console.log(myTimer)\n\n  return (\n    <>\n      <RandomNote counter={props.counter} measures={props.measures} currentNote={currentNote} randomNote={randomNote} setRandomNote={setRandomNote}/>\n      <div className = \"notes\">{props.notesBucket.join(' ').toUpperCase()}</div>\n      <div><BpmDisplay tempo={props.tempo}></BpmDisplay></div>\n      <div><TempoSlider onChange={props.slideTempo} className=\"tempo-settings\" tempo={props.tempo} decreaseTempo={props.decreaseTempo} increaseTempo={props.increaseTempo}></TempoSlider></div>\n      <div><Measures className=\"measures\" counter={props.counter} measures={props.measures} increaseBeats={props.increaseBeats} decreaseBeats={props.decreaseBeats}></Measures></div>\n      <div><StartStop toggleTimer={props.toggleTimer} total = {props.total} active={props.active}/></div>\n      {/* <PresetForm user={props.user} setPresetIndex = {setPresetIndex} loadPreset={loadPreset} measures={props.measures} setMeasures={props.setMeasures} props.notesBucket={props.notesBucket} tempo={props.tempo} setTempo={props.setTempo} counter={counter} setCheckedState={props.setCheckedState} checkedState={props.checkedState}/> */}\n      {/* <PresetForm tempo={props.tempo} measure={props.measures} timer={timer} onSubmit={resetCount}/> */}\n      {/* <PresetForm tempo={props.tempo} measure={props.measures} timer={timer} onSubmit={startMetronome}/> */}\n      {/* <PresetForm tempo={props.tempo} measure={props.measures} timer={timer} onSubmit={stopMetronome}/> */}\n      {/* <div><StartStop toggleTimer={addResource} active={props.active}/></div> */}\n    </>\n  )\n}\n\nexport default Metronome\n","import axios from 'axios'\nimport apiUrl from '../apiConfig'\n\nexport const createPreset = async (current, user) => {\n  console.log(current)\n  console.log(user)\n  console.log(user.token)\n  return axios.post(`${apiUrl}/presets`,\n    {\n      preset: {\n        owner: user,\n        measures: current.measures,\n        tempo: current.tempo,\n        name: current.name,\n        notes: current.notes,\n        checks: current.checks\n      }\n    },\n    {\n      headers: {\n        Authorization: `Bearer ${user.token}`\n      }\n    }\n\n  )\n}\n\nexport const createPost = (title, content, user) => {\n  return axios.post(\n    `${apiUrl}/posts`,\n    { post: { title, content } },\n    // Pass along the authorization which includes our user's token\n    {\n      headers: {\n        Authorization: `Bearer ${user.token}`\n      }\n    }\n  )\n}\n\nexport const updatePreset = async (current, user) => {\n  const presetID = current.id\n  axios.patch(`${apiUrl}/presets/${presetID}`, {\n    preset: {\n      owner: user,\n      measures: current.measures,\n      tempo: current.tempo,\n      name: current.name,\n      notes: current.notes,\n      checks: current.checks\n    }\n  },\n  {\n    headers: {\n      Authorization: `Bearer ${user.token}`\n    }\n  }\n  )\n    .then(response => {\n      console.log(response.data.notes)\n    })\n    .catch(console.error)\n}\n\nexport const deletePreset = async (current, user) => {\n  const presetID = current.id\n  axios.delete(`${apiUrl}/presets/${presetID}`,\n    {\n      headers: {\n        Authorization: `Bearer ${user.token}`\n      }\n    })\n    .then(response => {\n      console.log(response.data.notes)\n    })\n    .catch(console.error)\n}\nexport const loadPreset = async (current, user) => {\n  const presetID = current.id\n  axios.get(`${apiUrl}/presets/${presetID}`)\n    .then(response => {\n      console.log(response.data.notes)\n    })\n    .catch(console.error)\n}\n","import React, { useEffect } from 'react'\n\nconst DropDown = props => {\n//   useEffect(() => presetsList(), [props.presets])\n//   const presetsList = props.presets.length > 0 &&\n//     props.presets.map((preset, i) => {\n//       return (\n//         <option key={i} value={preset.id}>{preset.name}</option>\n//       )\n//     })\n\n  //   useEffect(() => {\n  //     for (const [index, [notes, , owner, measures, tempo, name]] of Object.entries(props.presets)) {\n  //       console.log(props.presets[index])\n  //       console.log(props.presets[notes])\n  //       console.log(props.presets[measures])\n  //       console.log(props.presets[owner])\n  //       console.log(index[0])\n  //       console.log(notes[0] + ': ' + notes[1])\n  //       console.log(owner[0] + ': ' + owner[1])\n  //       console.log(measures[0] + ': ' + measures[1])\n  //       console.log(tempo[0] + ': ' + tempo[1])\n  //       console.log(name[0] + ': ' + name[1])\n  //       presetsList.push(name[1])\n  //       console.log(presetsList)\n  //     }\n  //     return presetsList\n  //   }\n  //   )\n  useEffect(() => {\n    presetsArray = props.presets\n  }, [props.presets])\n\n  let presetsArray = props.presets?.map((preset, i = 0) => {\n    i++\n    return (\n      <option key = {preset._id}>{i}. {preset[6][1]}_{preset[5][1]}/{preset[4][1]}_{preset[1][1]}_{preset[2][1]}</option>\n    )\n  })\n\n  return (\n    <>\n      <div key={props.presets.length}>\n        {/* <h2>{props.presets[1]}</h2> */}\n        {/* <h2>{() => presetsList}</h2> */}\n        {/* <h2>{presetsList}</h2> */}\n        {/* {props.presets[4]} */}\n        {/* {props.presets} */}\n        <select id = \"preset-dropdown\" onChange={() => props.setPresetIndex(document.getElementById('preset-dropdown').selectedIndex)}>\n          <option hidden>Select A Preset</option>\n          {presetsArray}\n        </select>\n      </div>\n    </>\n  )\n}\n\nexport default DropDown\n","import axios from 'axios'\nimport React, { useEffect, useState } from 'react'\n// import { Link } from 'react-router-dom'\nimport apiUrl from '../../apiConfig'\nimport { createPreset, deletePreset, updatePreset, loadPreset } from '../../api/presets'\nimport DropDown from './DropDown'\n\n// import { Link } from 'react-router-dom'\n// const formatDate = () => {\n//   const d = new Date()\n//   return (d.getDay() + 1 + '/' + d.getMonth() + 1 + '/' + d.getUTCFullYear()\n//   )\n// }\n\nconst PresetForm = (props) => {\n  const [presetIndex, setPresetIndex] = useState(1)\n  const [presets, setPresets] = useState([[\n    [\n      'checks',\n      [true, true, true, true, true, true, true, true, true, true, true, true]\n    ],\n    [\n      'notes',\n      [\n        'a/',\n        'a#/',\n        'b/',\n        'c/',\n        'c#/',\n        'd/',\n        'd#/',\n        'e/',\n        'f/',\n        'f#/',\n        'g/',\n        'g#/'\n      ]\n    ],\n    [\n      '_id',\n      '622bfed04c5a29dcf7fa84a1'\n    ],\n    [\n      'owner',\n      '622bb9e4831bd2aba0ca0d17'\n    ],\n    [\n      'measures',\n      4\n    ],\n    [\n      'tempo',\n      120\n    ],\n    [\n      'name',\n      'default'\n    ],\n    [\n      'createdAt',\n      '2022-03-12T02:00:48.921Z'\n    ],\n    [\n      'updatedAt',\n      '2022-03-12T02:00:48.921Z'\n    ],\n    [\n      '__v',\n      0\n    ]\n  ]])\n  const [presetName, setPresetName] = useState('default')\n\n  // const [date] = useState(formatDate())\n  // const handleSubmit = event => {\n  //   event.preventDefault()\n  //   console.log(props.tempo, props.measure)\n  // }\n  // const getFormattedPrice = (price) => `$${price.toFixed(2)}`\n  // const arr = []\n  // presets.map(preset =>\n  //   arr.push(preset))\n  // console.log(arr)\n  const arr = []\n  console.log(arr)\n  console.log(presetName)\n  const allNotes = ['a', 'a#', 'b', 'c', 'c#', 'd', 'd#', 'e', 'f', 'f#', 'g', 'g#']\n  // const notes = ['a', 'a#', 'b', 'c', 'c#', 'd', 'd#', 'e', 'f', 'f#', 'g#']\n  // const loadPreset = (index) => {\n  //   console.log(index)\n  //   props.setTempo(presets[index].tempo)\n  //   props.setMeasures(presets[index].measures)\n  //   props.setCheckedState(presets[index].notes)\n  // }\n  useEffect(() => {\n    axios\n      .get(`${apiUrl}/presets`)\n      .then(response => addToPresets(response))\n      .catch(console.error)\n  }, [])\n  let presetsList\n  console.log(presetsList)\n  useEffect((presetsList) => {\n    console.log('ran')\n    presetsList = presets.name?.map(preset => (\n      <li key={preset}>\n        {preset}\n      </li>))\n    console.log(presetsList)\n    return presetsList\n  })\n  console.log(presetsList)\n  const addToPresets = response => {\n    const newPreset = response.data.preset\n    console.log(newPreset)\n    console.log(presets)\n    // console.log(...presets, newPreset)\n    setPresets([...presets, Object.entries(newPreset)])\n    console.log(presets)\n  }\n\n  const handleSubmit = (event) => {\n    event.preventDefault()\n    console.log(props.checkedState)\n    const current = {\n      checks: props.checkedState,\n      measures: props.measures,\n      tempo: props.tempo,\n      name: presetName,\n      id: presets[presetIndex - 1][2][1],\n      notes: extractNotes(props.checkedState),\n      index: presetIndex\n    }\n    if (props.user) { current.owner = props.user.token }\n    console.log(current)\n    switch (event.nativeEvent.submitter.name) {\n    case 'post':\n      createPreset(current, props.user)\n        .then(response => addToPresets(response))\n      // .then(response => console.log(response.data.preset))\n        // .then(response => props.setCheckedState(response.data.notes))\n        .catch(console.error)\n      break\n    case 'delete':\n      if (presetIndex !== 0) {\n        deletePreset(current, props.user)\n        // .then(console.log(presets))\n        // .then(() => setPresets(presets.pop(presetIndex)))\n        // // .then(response => { props.setCheckedState(response.data.notes) })\n        // .then(console.log(presets))\n          .catch(console.error)\n      }\n      break\n    case 'load':\n      if (presetIndex !== 0) {\n        handleSelectNewPreset()\n          .then(loadPreset(current, props.user))\n        // .then(response => { props.setCheckedState(response.data.notes) })\n          .catch(console.error)\n      }\n      break\n    case 'edit':\n      updatePreset(current, props.user)\n        // .then(response => { props.setCheckedState(response.data.notes) })\n        .catch(console.error)\n      break\n    }\n  }\n  // const handlePresetChange = () => {\n  //   console.log('handlepreset')\n  //   // props.loadPreset(document.getElementById('myList').options[document.getElementById('myList').selectedIndex].index)\n  //   // props.setPresetIndex(document.getElementById('myList').options[document.getElementById('myList').selectedIndex].index)\n  // }\n  // const renderedPresets = presets.map(preset => {\n  //   return (\n  //     <li key={preset._id}>\n  //       <Link to={`/presets/${preset._id}`}>\n  //         <h6>{preset.title}</h6>\n  //       </Link>\n  //       <p>{preset.author}</p>\n  //     </li>\n  //   )\n  // })\n\n  // console.log(renderedPresets)\n\n  const handleCheckChange = (position) => {\n    const updatedCheckedState = props.checkedState.map((item, index) =>\n      index === position ? !item : item\n    )\n    console.log(updatedCheckedState)\n    props.setCheckedState(updatedCheckedState)\n    console.log(updatedCheckedState.length)\n    console.log(props.checkedState[1])\n  }\n\n  const handleSelectNewPreset = async () => {\n    const index = document.querySelector('#preset-dropdown').selectedIndex - 1\n    props.setCheckedState(presets[index][0][1])\n    props.setTempo(presets[index][5][1])\n    props.setMeasures(presets[index][4][1])\n    setPresetName(presets[index][6][1])\n    // document.getElementById('presetName').innerHTML(presetName)\n  }\n\n  const handlePresetNameChange = (event) => {\n    let updatedPreset\n    if (event.nativeEvent.data) {\n      updatedPreset = presetName + event.nativeEvent.data\n      console.log(updatedPreset)\n    } else {\n      updatedPreset = presetName.substring(0, presetName.length - 1)\n    }\n    setPresetName(updatedPreset)\n  }\n  const extractNotes = (preset = [props.checkState]) => {\n    console.log('extractNotes')\n    let i\n    const arr = []\n    console.log(i)\n    // console.log(arr)\n    preset?.map((check, i) => {\n      i++\n      if (check) {\n        arr.push(allNotes[i - 1] + '/')\n      }\n      return check\n    })\n    return (arr.splice(0, arr.length - 0))\n  }\n  console.log(props.checkedState)\n  console.log(allNotes)\n  return (\n    <>\n      {presetsList}\n      {/* <form onSubmit={props.onSubmit}>\n        <h2>Hello</h2>\n        <h4>{props.tempo}</h4>\n        <h4>{props.measure}</h4>\n        <button type='submit'>button</button>\n        <h1>{props.counter + 1}</h1>\n      </form> */}\n      <form onSubmit={handleSubmit}>\n        <div>\n          {allNotes.map(({ name }, index) => {\n            return (\n              <>\n                {props.presets}\n                <input key={index}\n                  type=\"checkbox\"\n                  id={`custom-checkbox-${index}`}\n                  name={allNotes[index]}\n                  value={allNotes[index]}\n                  checked={props.checkedState[index]}\n                  onChange={() => handleCheckChange(index, allNotes[index])}\n                />\n                <label htmlFor={`custom-checkbox-${index}`}>{allNotes[index].toUpperCase()} {''}</label>\n              </>\n            )\n          })}\n        </div>\n        {/* {presets[1]} */}\n        {/* {document.querySelector} */}\n        {/* {presetName} */}\n        {/* {props.tempo} */}\n        <b> select a preset </b>\n        <DropDown extractNotes={extractNotes} presets={presets} tempo={props.tempo}setPresetIndex={setPresetIndex}/>\n        <div><button name='load' type='submit'>Load</button><button name='edit' type='submit'>Update</button><button name='delete' type='submit'>Delete</button></div><input id='presetName' value={presetName} onChange = {handlePresetNameChange}></input><button name='post' type='submit'>Save As</button>\n      </form>\n    </>\n  )\n}\n\n// const PresetForm = ({ book, handleChange, handleSubmit, cancelUrl }) => {\n//   <>\n//     <form onSubmit={handleSubmit}>\n//       <label htmlFor={'title'}>Title</label>\n//       <input\n//         id={'title'}\n//         // value represents what is in state\n//         value={book.title}\n//         // when the input changes -- state is updated\n//         onChange={handleChange}\n//         name='title'\n//       />\n\n//       <label htmlFor='author'>Author:</label>\n//       <input\n//         id='author'\n//         value={book.author}\n//         onChange={handleChange}\n//         name='author'\n//       />\n\n//       <button type='submit'>SUBMIT TO THE FORM</button>\n//     </form>\n\n//     <Link to={cancelUrl}>GET ME OUTTA HERE!!!!</Link>\n//   </>\n// }\n\nexport default PresetForm\n","/* eslint-disable no-tabs */\nimport React, { useState } from 'react'\nimport { Route, Routes } from 'react-router-dom'\nimport { v4 as uuid } from 'uuid'\nimport './index.scss'\n\nimport AutoDismissAlert from './components/AutoDismissAlert/AutoDismissAlert'\nimport Header from './components/Header/Header'\nimport SignUp from './components/auth/SignUp'\nimport SignIn from './components/auth/SignIn'\nimport SignOut from './components/auth/SignOut'\nimport ChangePassword from './components/auth/ChangePassword'\n\nimport Metronome from './components/Metronome/Metronome'\nimport PresetForm from './components/Presets/PresetForm'\n\nconst App = () => {\n  const [user, setUser] = useState(null)\n  const [msgAlerts, setMsgAlerts] = useState([])\n  const [tempo, setTempo] = useState(120)\n  const [measures, setMeasures] = useState(4)\n  const [active, setActive] = useState(0)\n  const [checkedState, setCheckedState] = useState([true, true, true, true, true, true, true, true, true, true, true, true])\n  const [total, setTotal] = useState(0)\n  const [notesBucket, setNotesBucket] = useState(['a', 'a#', 'b', 'c', 'c#', 'd', 'd#', 'e', 'f', 'f#', 'g', 'g#'])\n  const [counter, setCounter] = useState(1)\n  console.log(setMeasures)\n  console.log(setTempo)\n\n  const clearUser = () => setUser(null)\n\n  const msgAlert = ({ heading, message, variant }) => {\n    const id = uuid()\n    setMsgAlerts(msgAlerts => ([...msgAlerts, { heading, message, variant, id }]))\n  }\n\n  const tempoDisplay = document.querySelector('.tempo')\n  console.log(tempoDisplay)\n  const tempoText = document.querySelector('.tempo-text')\n  console.log(tempoText)\n  const decreaseTempoBtn = document.querySelector('.decrease-tempo')\n  console.log(decreaseTempoBtn)\n  const increaseTempoBtn = document.querySelector('.increase-tempo-button')\n  console.log(increaseTempoBtn)\n  const tempoSlider = document.querySelector('.slider')\n  console.log(tempoSlider)\n  const startStopBtn = document.querySelector('.start-stop-button')\n  console.log(startStopBtn)\n  const subtractBeats = document.querySelector('.subtract-beats')\n  console.log(subtractBeats)\n  // const addBeats = document.querySelector('.add-beats')\n  // console.log(addBeats)\n  const BpmDisplayElement = document.querySelector('.bpm-display')\n  console.log(BpmDisplayElement)\n  const metronome = { but: 'that' }\n  console.log(metronome)\n  const beatsDisplay = document.querySelector('.beats-display')\n  console.log(beatsDisplay)\n  // while (active) {\n  //   setActive(0)\n  // }\n\n  const decreaseTempo = () => {\n    if (tempo < 20) {\n      return true\n    } else {\n      setTempo(tempo => tempo - 1)\n    }\n  }\n\n  const increaseTempo = () => {\n    if (tempo > 240) {\n      return true\n    } else {\n      setTempo(tempo => tempo + 1)\n    }\n  }\n\n  const decreaseBeats = () => {\n    if (measures <= 2) {\n      return true\n    } else {\n      setMeasures(measures => measures - 1)\n    }\n  }\n\n  const increaseBeats = () => {\n    if (measures >= 8) {\n      return true\n    } else {\n      setMeasures(measures => measures + 1)\n    }\n  }\n\n  const slideTempo = () => {\n    setTempo(parseInt(tempoSlider.value))\n  }\n\n  const toggleTimer = () => {\n    let stat = active\n    switch (active) {\n    case 0:\n      stat = 1\n      // myTimer.start()\n      break\n    default:\n      stat = 0\n      // myTimer.stop()\n      break\n    }\n    setActive(stat)\n    setTotal(0)\n  }\n  // if (active === 0) {\n  //   myTimer.stop()\n  // } else {\n  //   myTimer.start()\n  // }\n  // console.log(myTimer)\n\n  // const stopTimer = () => {\n  //   myTimer.start()\n  // }\n  // console.log(startTimer)\n  // console.log(stopTimer)\n\n  return (\n    <>\n      <Header user={user} />\n      {msgAlerts.map(msgAlert => (\n        <AutoDismissAlert\n          key={msgAlert.id}\n          heading={msgAlert.heading}\n          variant={msgAlert.variant}\n          message={msgAlert.message}\n          id={msgAlert.id}\n        />\n      ))}\n      <main className='container'>\n        <Routes>\n          <Route\n            path='/sign-up'\n            element={<SignUp msgAlert={msgAlert} setUser={setUser} /> }\n          />\n          <Route\n            path='/sign-in'\n            element={<SignIn msgAlert={msgAlert} setUser={setUser} /> }\n          />\n          <Route\n            path='/sign-out'\n            element={<SignOut msgAlert={msgAlert} clearUser={clearUser} user={user} /> }\n          />\n          <Route\n            path='/change-password'\n            element={<ChangePassword msgAlert={msgAlert} user={user} /> }\n          />\n          <Route className = \"presets\"\n            path='/settings'\n            element={<PresetForm user={user} measures={measures} setMeasures={setMeasures} notesBucket={notesBucket} tempo={tempo} setTempo={setTempo} counter={counter} setCheckedState={setCheckedState} checkedState={checkedState} /> }\n          />\n\n        </Routes>\n      </main>\n      <div className=\"parent\">\n        {checkedState}\n        <div className=\"home\">\n          <Metronome className=\"metronome\"\n            setTempo={setTempo}\n            setMeasures={setMeasures}\n            tempo={tempo}\n            measures={measures}\n            decreaseTempo={decreaseTempo}\n            increaseTempo={increaseTempo}\n            increaseBeats={increaseBeats}\n            decreaseBeats={decreaseBeats}\n            slideTempo={slideTempo}\n            toggleTimer={toggleTimer}\n            user={user}\n            counter={counter}\n            setCounter={setCounter}\n            notesBucket = {notesBucket}\n            setNotesBucket = {setNotesBucket}\n            checkedState={checkedState}\n            setCheckedState={setCheckedState}\n            total={total}\n            setTotal={setTotal}\n            // setCounter = {setCounter}\n            // addResource={addResource}\n            active={active}></Metronome>\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.scss'\n\nimport App from './App'\nimport { BrowserRouter } from 'react-router-dom'\n\nconst appJsx = (\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <App />\n  </BrowserRouter>\n)\n\nReactDOM.render(appJsx, document.getElementById('root'))\n"],"sourceRoot":""}