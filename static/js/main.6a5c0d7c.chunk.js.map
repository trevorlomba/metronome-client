{"version":3,"sources":["components/AutoDismissAlert/AutoDismissAlert.js","components/Header/Header.js","apiConfig.js","api/auth.js","components/auth/SignUp.js","components/AutoDismissAlert/messages.js","components/auth/SignIn.js","components/auth/SignOut.js","components/auth/ChangePassword.js","components/Metronome/AdjustTempo.jsx","components/Metronome/TempoSlider.jsx","components/Metronome/AdjustBeats.jsx","components/Metronome/Measures.jsx","components/Metronome/BpmDisplay.jsx","components/Metronome/StartStop.jsx","components/Metronome/RandomNote.jsx","click3.wav","noteTones/aTone.wav","noteTones/aSharpTone.wav","noteTones/bTone.wav","noteTones/cTone.wav","noteTones/cSharpTone.wav","noteTones/dTone.wav","noteTones/dSharpTone.wav","noteTones/eTone.wav","noteTones/fTone.wav","noteTones/fSharpTone.wav","noteTones/gTone.wav","noteTones/gSharpTone.wav","components/Metronome/Metronome.jsx","api/presets.js","components/Presets/NotesForm.jsx","components/Presets/DropDown.jsx","components/Presets/PresetsForm.jsx","App.js","index.js"],"names":["AutoDismissAlert","variant","heading","message","useState","show","setShow","timeoutId","setTimeoutId","useEffect","id","setTimeout","clearTimeout","Alert","onClose","dismissible","className","Heading","authenticatedOptions","to","unauthenticatedOptions","alwaysOptions","Header","user","Navbar","expand","Container","Brand","style","color","textDecoration","Collapse","Nav","email","apiUrls","apiUrl","window","location","hostname","signUp","password","passwordConfirmation","axios","post","credentials","password_confirmation","signIn","signOut","delete","headers","Authorization","token","changePassword","oldPassword","newPassword","patch","passwords","old","new","SignUp","msgAlert","setUser","setEmail","setPassword","setPasswordConfirmation","shouldNavigate","setShouldNavigate","onSignUp","event","a","preventDefault","res","data","Form","onSubmit","Group","controlId","Label","Control","required","type","name","value","placeholder","onChange","target","Button","SignIn","onSignIn","SignOut","clearUser","performSignOut","ChangePassword","setOldPassword","setNewPassword","onChangePassword","AdjustTempo","props","onClick","text","TempoSlider","decreaseTempo","tempo","min","max","step","increaseTempo","AdjustBeats","Measures","decreaseBeats","measures","increaseBeats","counter","BpmDisplay","StartStop","toggleTimer","total","RandomNote","currentNote","toUpperCase","randomNote","Metronome","notesBucket","Math","floor","random","setCurrentNote","setRandomNote","first","setFirst","noteTones","aTone","aSharpTone","b","bTone","c","cTone","cSharpTone","d","dTone","dSharpTone","e","eTone","f","fTone","fSharpTone","g","gTone","gSharpTone","console","log","position","updatedCheckedState","checkedState","map","item","index","setCheckedState","rand","length","allNotes","interval","setCounter","clearInterval","randomNoteString","toString","AudioPlay","Howl","src","play","active","setInterval","setTotal","click3","i","arr","note","push","setNotesBucket","join","slideTempo","createPreset","current","preset","owner","notes","checks","updatePreset","presetID","then","response","catch","error","deletePreset","loadPreset","get","qs","require","NotesForm","presets","setPresets","presetIndex","setPresetIndex","presetName","setPresetName","params","paramsSerializer","stringify","presetsArray","Object","entries","loadAllPresets","removeFromPresets","_id","newPresets","filter","obj","document","getElementById","selectedIndex","handleSelectNewPreset","setTempo","setMeasures","extractNotes","checkState","check","splice","nativeEvent","submitter","addToPresets","checked","handleCheckChange","htmlFor","DropDown","PresetsForm","updatedPreset","substring","App","msgAlerts","setMsgAlerts","setActive","uuid","tempoSlider","querySelector","path","element","parseInt","stat","appJsx","basename","process","ReactDOM","render"],"mappings":"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","file":"static/js/main.6a5c0d7c.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\n\n// We have imported some custom styling for this alert\n// Which will be off-topic, unless extra time at the end of the lesson.\nimport './AutoDismissAlert.scss'\nimport Alert from 'react-bootstrap/Alert'\n\nfunction AutoDismissAlert ({ variant, heading, message }) {\n  // create `show` state. When this is false, the Alert will be hidden from the screen.\n  const [show, setShow] = useState(true)\n  // We are going to create a timer that will stop showing the alert after 5 seconds\n  // We store the timeoutId, incase we need to cancel the timer early (because the AutoDismissAlert was unmounted)\n  const [timeoutId, setTimeoutId] = useState(null)\n  // console.log(timeoutId)\n\n  // this will run once, when the component is mounted (added) to the screen\n  // it runs once, because it has an empty dependency array as the second argument\n  useEffect(() => {\n    // We want to create a timer, that closes the alert after 5 seconds (5000 milliseconds)\n    const id = setTimeout(() => setShow(false), 5000)\n    // Keep track of the timeoutId\n    setTimeoutId(id)\n\n    // We want to clean up the timer\n    // this is like componentWillUnmount, it is run whenever the component is unmounted\n    // and its also run before an effect is re-created\n    return function cleanup () {\n      clearTimeout(timeoutId)\n    }\n  }, [])\n\n  return (\n    <Alert\n      /* This is the color, make it the bootstrap passed down as a prop */\n      variant={variant}\n      /* This function sets the show state to false, whenever the x in the top right is clicked. */\n      onClose={() => setShow(false)}\n      /* This adds a close button to our alert */\n      dismissible\n      /* The show property will display the alert if true, and hide it if false. */\n      show={show}\n    >\n      <div className='container'>\n        <Alert.Heading>{heading}</Alert.Heading>\n        <p className='alert-body'>{message}</p>\n      </div>\n    </Alert>\n  )\n}\n\nexport default AutoDismissAlert\n","import React from 'react'\nimport Nav from 'react-bootstrap/Nav'\nimport Navbar from 'react-bootstrap/Navbar'\nimport Container from 'react-bootstrap/Container'\nimport { Link, NavLink } from 'react-router-dom'\n\nconst authenticatedOptions = (\n  <>\n    <NavLink to='/presets' className='nav-link'>Settings</NavLink>\n    <NavLink to='/change-password' className='nav-link'>Change Password</NavLink>\n    <NavLink to='/sign-out' className='nav-link'>Sign Out</NavLink>\n  </>\n)\n\nconst unauthenticatedOptions = (\n  <>\n    <NavLink to='/settings' className='nav-link'>Settings</NavLink>\n    <NavLink to='/sign-up' className='nav-link'>Sign Up</NavLink>\n    <NavLink to='/sign-in' className='nav-link'>Sign In</NavLink>\n  </>\n)\n\nconst alwaysOptions = (\n  <>\n    <NavLink to='/' className='nav-link'>Home</NavLink>\n  </>\n)\n\nconst Header = ({ user }) => (\n  <>\n    <Navbar className=\"color-nav\" variant='dark' expand='md'>\n      <Container>\n        <Navbar.Brand>\n          <Link to='/' style={{ color: '#FFF', textDecoration: 'none' }}>metronome</Link>\n        </Navbar.Brand>\n        {/* <Navbar.Toggle aria-controls='basic-navbar-nav' /> */}\n        <Navbar.Collapse id='basic-navbar-nav'>\n          <Nav className='ms-auto'>\n            {user && (\n              <span className='navbar-text me-2'>Welcome, {user.email}</span>\n            )}\n            {alwaysOptions}\n            {user ? authenticatedOptions : unauthenticatedOptions}\n          </Nav>\n        </Navbar.Collapse>\n      </Container>\n    </Navbar>\n    {/* <Navbar bg='primary' variant='dark' expand='md'>\n    </Navbar> */}\n  </>\n)\n\nexport default Header\n","let apiUrl\nconst apiUrls = {\n  production: 'https://calm-scrubland-98993.herokuapp.com',\n  development: 'http://localhost:4741'\n}\n\nif (window.location.hostname === 'localhost') {\n  apiUrl = apiUrls.development\n} else {\n  apiUrl = apiUrls.production\n}\n\nexport default apiUrl\n","import apiUrl from '../apiConfig'\nimport axios from 'axios'\n\nexport const signUp = (email, password, passwordConfirmation) => {\n  return axios.post(apiUrl + '/sign-up/', {\n    credentials: {\n      email,\n      password,\n      password_confirmation: passwordConfirmation\n    }\n  })\n}\n\nexport const signIn = (email, password) => {\n  return axios.post(apiUrl + '/sign-in/', {\n    credentials: {\n      email,\n      password\n    }\n  })\n}\n\nexport const signOut = user => {\n  return axios.delete(apiUrl + '/sign-out/', {\n    headers: {\n      Authorization: `Bearer ${user.token}`\n    }\n  })\n}\n\nexport const changePassword = (oldPassword, newPassword, user) => {\n  return axios.patch(\n    apiUrl + '/change-password/',\n    {\n      passwords: {\n        old: oldPassword,\n        new: newPassword\n      }\n    },\n    {\n      headers: {\n        Authorization: `Bearer ${user.token}`\n      }\n    }\n  )\n}\n","import React, { useState } from 'react'\nimport { Navigate } from 'react-router-dom'\n\nimport { signUp, signIn } from '../../api/auth'\nimport { signUpSuccess, signUpFailure } from '../AutoDismissAlert/messages'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nconst SignUp = ({ msgAlert, setUser }) => {\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [passwordConfirmation, setPasswordConfirmation] = useState('')\n  const [shouldNavigate, setShouldNavigate] = useState(false)\n\n  const onSignUp = async (event) => {\n    event.preventDefault()\n\n    try {\n      await signUp(email, password, passwordConfirmation)\n      const res = await signIn(email, password)\n      setUser(res.data.user)\n      msgAlert({\n        heading: 'Sign Up Success',\n        message: signUpSuccess,\n        variant: 'success'\n      })\n      setShouldNavigate(true)\n    } catch (error) {\n      setEmail('')\n      setPassword('')\n      setPasswordConfirmation('')\n      msgAlert({\n        heading: 'Sign Up Failed with error: ' + error.message,\n        message: signUpFailure,\n        variant: 'danger'\n      })\n    }\n  }\n\n  if (shouldNavigate) {\n    return <Navigate to='/' />\n  }\n\n  return (\n    <div className='authform'>\n      <div className='row'>\n        <h3>Sign Up</h3>\n        <Form onSubmit={onSignUp}>\n          <Form.Group controlId='email'>\n            <Form.Label>Email address</Form.Label>\n            <Form.Control\n              required\n              type='email'\n              name='email'\n              value={email}\n              placeholder='Enter email'\n              onChange={event => setEmail(event.target.value)}\n            />\n          </Form.Group>\n          <Form.Group controlId='password'>\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              required\n              name='password'\n              value={password}\n              type='password'\n              placeholder='Password'\n              onChange={event => setPassword(event.target.value)}\n            />\n          </Form.Group>\n          <Form.Group controlId='passwordConfirmation'>\n            <Form.Label>Password Confirmation</Form.Label>\n            <Form.Control\n              required\n              name='passwordConfirmation'\n              value={passwordConfirmation}\n              type='password'\n              placeholder='Confirm Password'\n              onChange={event => setPasswordConfirmation(event.target.value)}\n            />\n          </Form.Group>\n          <Button className='mt-2' variant='primary' type='submit'>Submit</Button>\n        </Form>\n      </div>\n    </div>\n  )\n}\n\nexport default SignUp\n","export const signUpSuccess = 'Succesfully registered! You\\'ve been signed in as well.'\nexport const signUpFailure = 'Registration failed. Email may be taken, or passwords don\\'t match.'\nexport const signInSuccess = 'Welcome!'\nexport const signInFailure = 'Failed to sign in. Check your email and password and try again.'\nexport const signOutSuccess = 'Come back soon!'\nexport const changePasswordSuccess = 'Password changed successfully!'\nexport const changePasswordFailure = 'Failed to change passwords. Check your old password and try again.'\nexport const loadPresetSuccess = 'Loaded  preset!'\nexport const loadPresetFailure = 'Preset load failure. Please try again.'\nexport const updatePresetSuccess = 'Updated preset!'\nexport const updatePresetFailure = 'Preset update failure. Please try again.'\nexport const deletePresetSuccess = 'Deleted preset!'\nexport const deletePresetFailure = 'Preset deletion failure. Please try again.'\nexport const newPresetSuccess = 'Created new preset!'\nexport const newPresetFailure = 'Preset creation failure. Please try again.'\n","import React, { useState } from 'react'\nimport { Navigate } from 'react-router-dom'\n\nimport { signIn } from '../../api/auth'\nimport { signInSuccess, signInFailure } from '../AutoDismissAlert/messages'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nimport '../../index.scss'\n\nconst SignIn = ({ msgAlert, setUser }) => {\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [shouldNavigate, setShouldNavigate] = useState(false)\n\n  const onSignIn = async (event) => {\n    event.preventDefault()\n\n    try {\n      const res = await signIn(email, password)\n      setUser(res.data.user)\n\n      msgAlert({\n        heading: 'Sign In Success',\n        message: signInSuccess,\n        variant: 'success'\n      })\n      setShouldNavigate(true)\n    } catch (error) {\n      setEmail('')\n      setPassword('')\n      msgAlert({\n        heading: 'Sign In Failed with error: ' + error.message,\n        message: signInFailure,\n        variant: 'danger'\n      })\n    }\n  }\n\n  if (shouldNavigate) {\n    return <Navigate to='/' />\n  }\n\n  return (\n    <div className='authform'>\n      <div className='row'>\n        {/* <div className='col-sm-10 col-md-8 mx-auto'> */}\n        <h3>Sign In</h3>\n        <Form onSubmit={onSignIn}>\n          <Form.Group controlId='email'>\n            <Form.Label>Email address</Form.Label>\n            <Form.Control\n              required\n              type='email'\n              name='email'\n              value={email}\n              placeholder='Enter email'\n              onChange={(event) => setEmail(event.target.value)}\n            />\n          </Form.Group>\n          <Form.Group controlId='password'>\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              required\n              name='password'\n              value={password}\n              type='password'\n              placeholder='Password'\n              onChange={(event) => setPassword(event.target.value)}\n            />\n          </Form.Group>\n          <Button className='mt-2' variant='primary' type='submit'>\nSubmit\n          </Button>\n        </Form>\n      </div>\n    </div>\n    // </div>\n  )\n}\n\nexport default SignIn\n","import React, { useState, useEffect } from 'react'\nimport { Navigate } from 'react-router-dom'\n\nimport { signOut } from '../../api/auth'\nimport { signOutSuccess } from '../AutoDismissAlert/messages'\n\nconst SignOut = ({ msgAlert, clearUser, user }) => {\n  const [shouldNavigate, setShouldNavigate] = useState(false)\n\n  // this is like componentDidMount, it will run whenever the SignOut component\n  // is mounted (or added) to the page\n  useEffect(() => {\n  // for performance reasons, when using `useEffect`\n  // it's a best practice to create a helper function w/ async/await\n    const performSignOut = async () => {\n    // make a signOut axios request\n      await signOut(user)\n\n      msgAlert({\n        heading: 'Signed Out Successfully',\n        message: signOutSuccess,\n        variant: 'success'\n      })\n\n      // reset the user back to its initial value\n      clearUser()\n      setShouldNavigate(true)\n    }\n    performSignOut()\n  }, [])\n\n  if (!user || shouldNavigate) {\n    return <Navigate to='/' />\n  }\n\n  return ''\n}\n\nexport default SignOut\n","import React, { useState } from 'react'\nimport { Navigate } from 'react-router-dom'\n\nimport { changePassword } from '../../api/auth'\nimport { changePasswordSuccess, changePasswordFailure } from '../AutoDismissAlert/messages'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nconst ChangePassword = ({ msgAlert, user }) => {\n  const [oldPassword, setOldPassword] = useState('')\n  const [newPassword, setNewPassword] = useState('')\n  const [shouldNavigate, setShouldNavigate] = useState(false)\n\n  const onChangePassword = async (event) => {\n    event.preventDefault()\n\n    try {\n      await changePassword(oldPassword, newPassword, user)\n      msgAlert({\n        heading: 'Change Password Success',\n        message: changePasswordSuccess,\n        variant: 'success'\n      })\n      setShouldNavigate(true)\n    } catch (error) {\n      setOldPassword('')\n      setNewPassword('')\n      msgAlert({\n        heading: 'Change Password Failed with error: ' + error.message,\n        message: changePasswordFailure,\n        variant: 'danger'\n      })\n    }\n  }\n\n  if (!user || shouldNavigate) {\n    return <Navigate to='/' />\n  }\n\n  return (\n    <div className='authform'>\n      <div className='row'>\n        <h3>Change Password</h3>\n        <Form onSubmit={onChangePassword}>\n          <Form.Group controlId='oldPassword'>\n            <Form.Label>Old password</Form.Label>\n            <Form.Control\n              required\n              name='oldPassword'\n              value={oldPassword}\n              type='password'\n              placeholder='Old Password'\n              onChange={event => setOldPassword(event.target.value)}\n            />\n          </Form.Group>\n          <Form.Group controlId='newPassword'>\n            <Form.Label>New Password</Form.Label>\n            <Form.Control\n              required\n              name='newPassword'\n              value={newPassword}\n              type='password'\n              placeholder='New Password'\n              onChange={event => setNewPassword(event.target.value)\n              }\n            />\n          </Form.Group>\n          <Button className='mt-2' variant='primary' type='submit'>Submit</Button>\n        </Form>\n      </div>\n    </div>\n  )\n}\n\nexport default ChangePassword\n","import React from 'react'\n\nimport '../../index.scss'\n\nconst AdjustTempo = (props) => (\n  <span className={props.className} onClick={props.onClick}>{props.text}</span>\n)\n\nexport default AdjustTempo\n","import React from 'react'\n\nimport AdjustTempo from './AdjustTempo'\n\nimport '../../index.scss'\n\nconst TempoSlider = (props) => {\n  const decreaseTempo = () => {\n    // console.log('yup')\n    props.decreaseTempo()\n  }\n  const increaseTempo = () => {\n    // console.log('yup')\n    props.increaseTempo()\n  }\n  const slideTempo = () => {\n    props.onChange()\n  }\n  return (\n    <>\n      <div className = \"tempo-slider\">\n        <AdjustTempo className=\"adjust decrease-tempo\" text=\"-\" onClick = {decreaseTempo} />\n        <input type=\"range\" value={props.tempo} min=\"40\" max=\"180\" step=\"1\" className=\"slider\" onChange = {slideTempo}></input>\n        <AdjustTempo className=\"adjust increase-tempo\" text=\"+\" onClick = {increaseTempo}></AdjustTempo>\n      </div>\n    </>\n  )\n}\n\nexport default TempoSlider\n","import React from 'react'\n\nimport '../../index.scss'\n\nconst AdjustBeats = (props) => (\n  <span className={props.className} onClick={props.onClick}>{props.text}</span>\n)\n\nexport default AdjustBeats\n","import React from 'react'\n\nimport '../../index.scss'\n\nimport AdjustBeats from './AdjustBeats'\n\nconst Measures = (props) => {\n  const decreaseBeats = () => {\n    // console.log('yup')\n    props.decreaseBeats()\n  }\n  const increaseBeats = () => {\n    // console.log('yup')\n    props.increaseBeats()\n  }\n\n  return (\n    <>\n      <div className=\"bpm-display \">{props.tempo}</div>\n      <div className=\"measures-count\">\n        <AdjustBeats className=\"adjust stepper subtract-beats\" text=\"-\" onClick = {decreaseBeats}></AdjustBeats>\n        <span className='beats-display'> {props.measures} </span>\n        <AdjustBeats className=\"adjust stepper add-beats\" text=\"+\" onClick = {increaseBeats}></AdjustBeats>\n      </div>\n      <div className='counter'><div>{props.counter + 1}</div></div>\n    </>\n  )\n}\n\nexport default Measures\n","import React from 'react'\n\nimport '../../index.scss'\n\nconst BpmDisplay = (props) => (\n  <>\n    <div className=\"bpm-display \">{props.tempo}</div>\n  </>\n)\n\nexport default BpmDisplay\n","import React from 'react'\n\nconst StartStop = (props) => (\n  <>\n    <button className=\"start-stop\" onClick = {props.toggleTimer}>{props.total}</button>\n  </>\n)\n\nexport default StartStop\n","import React from 'react'\n\nconst RandomNote = (props) => {\n  return (\n    <>\n      <div className = \"notes-walk\">{props.currentNote.toUpperCase()} {'/ '}{props.randomNote.toUpperCase()}</div>\n      {/* <h1>{props.currentNote} {'-' + '-'.repeat((props.counter))}{'> '}{props.randomNote}</h1> */}\n    </>\n  )\n}\n\nexport default RandomNote\n","export default __webpack_public_path__ + \"static/media/click3.6f0ec101.wav\";","export default __webpack_public_path__ + \"static/media/aTone.7d43411d.wav\";","export default __webpack_public_path__ + \"static/media/aSharpTone.b4827b64.wav\";","export default __webpack_public_path__ + \"static/media/bTone.4a5d6b78.wav\";","export default __webpack_public_path__ + \"static/media/cTone.2bfb6420.wav\";","export default __webpack_public_path__ + \"static/media/cSharpTone.5918970f.wav\";","export default __webpack_public_path__ + \"static/media/dTone.008436dd.wav\";","export default __webpack_public_path__ + \"static/media/dSharpTone.ab85f658.wav\";","export default __webpack_public_path__ + \"static/media/eTone.d391bb66.wav\";","export default __webpack_public_path__ + \"static/media/fTone.6c426ab1.wav\";","export default __webpack_public_path__ + \"static/media/fSharpTone.5b83b95c.wav\";","export default __webpack_public_path__ + \"static/media/gTone.514e1f9b.wav\";","export default __webpack_public_path__ + \"static/media/gSharpTone.af158516.wav\";","// import React from 'react'\nimport React, { useState, useEffect } from 'react'\nimport { Howl } from 'howler'\n\nimport TempoSlider from './TempoSlider'\nimport Measures from './Measures'\nimport BpmDisplay from './BpmDisplay'\nimport StartStop from './StartStop'\n// import PresetForm from '../Presets/PresetForm'\nimport RandomNote from '../Metronome/RandomNote'\n\nimport '../../index.scss'\nimport click3 from '../../click3.wav'\nimport aTone from '../../noteTones/aTone.wav'\nimport aSharpTone from '../../noteTones/aSharpTone.wav'\nimport bTone from '../../noteTones/bTone.wav'\nimport cTone from '../../noteTones/cTone.wav'\nimport cSharpTone from '../../noteTones/cSharpTone.wav'\nimport dTone from '../../noteTones/dTone.wav'\nimport dSharpTone from '../../noteTones/dSharpTone.wav'\nimport eTone from '../../noteTones/eTone.wav'\nimport fTone from '../../noteTones/fTone.wav'\nimport fSharpTone from '../../noteTones/fSharpTone.wav'\nimport gTone from '../../noteTones/gTone.wav'\nimport gSharpTone from '../../noteTones/gSharpTone.wav'\n\nconst Metronome = (props) => {\n  // const [presetIndex] = useState(0)\n  const [currentNote, setCurrentNote] = useState(props.notesBucket[Math.floor(Math.random() * 12)])\n  const [randomNote, setRandomNote] = useState(props.notesBucket[Math.floor(Math.random() * 12)])\n  const [first, setFirst] = useState(true)\n  const noteTones = {\n    a: aTone,\n    'a#': aSharpTone,\n    b: bTone,\n    c: cTone,\n    'c#': cSharpTone,\n    d: dTone,\n    'd#': dSharpTone,\n    e: eTone,\n    f: fTone,\n    'f#': fSharpTone,\n    g: gTone,\n    'g#': gSharpTone\n  }\n  const handleCheckChange = (position) => {\n    const updatedCheckedState = props.checkedState.map((item, index) =>\n      index === position ? !item : item\n    )\n    // console.log(updatedCheckedState)\n    props.setCheckedState(updatedCheckedState)\n    // console.log(updatedCheckedState.length)\n    // console.log(props.checkedState[1])\n  }\n  console.log(handleCheckChange)\n  // setCurrentNote(props.notesBucket)\n  // setRandomNote(props.notesBucket)\n  // const [intervalID,  setIntervalID] = useState(0)\n  // const toggleTimer = () => {\n  //   props.toggleTimer()\n  // }\n\n  // function Timer (callback, timeInterval, errorCallback) {\n  //   this.timeout = ''\n  //   this.timeoutID = ''\n  //   this.timeInterval = timeInterval\n  //   this.start = () => {\n  //     this.expected = Date.now() + this.timeInterval\n  //     this.timeout = setTimeout(this.round, this.timeInterval)\n  //     this.timeoutID = this.timeout\n  //     console.log('Started')\n  //     console.log(this.timeout)\n  //     return this.timeout\n  //   }\n  //   this.stop = () => {\n  //     console.log(this.timeout)\n  //     clearTimeout(this.timeout)\n  //     console.log(this.timeout)\n  //     console.log('Stopped')\n  //   }\n  //   this.round = () => {\n  //     const drift = Date.now() - this.expected\n  //     if (drift > this.timeInerval) {\n  //       errorCallback()\n  //     }\n  //     callback()\n  //     this.expected += this.timeInterval\n  //     console.log(drift)\n  //     console.log(this.timeInterval - drift)\n  //     console.log(this.timeout)\n  //     this.timeout = setTimeout(this.round, this.timeInterval - drift)\n  //   }\n  //   this.nah = () => {\n  //     console.log('nah' * 50)\n  //   }\n  // }\n  // const addResource =\n  // console.log(myTimer)\n  // myTimer.start()\n  // let tempo = 120\n  // let measures = 4\n\n  // const click1 = new Audio('/click1.wav')\n  // const click2 = new Audio('/click2.wav')\n\n  // if (active === 1) { myTimer.start() }\n  // if (active === 0) { myTimer.stop() }\n\n  // const myTimer = new Timer(() => { console.log(props.tempo) }, 1000)\n\n  // if (active === 0) {\n  //   myTimer.stop()\n  // } else {\n  //   myTimer.start()\n  // }\n  // console.log(myTimer)\n\n  // const stopTimer = () => {\n  //   myTimer.start()\n  // }\n  // console.log(startTimer)\n  // console.log(stopTimer)\n  // useEffect(() => {\n  // })\n  const rand = Math.floor(Math.random() * props.notesBucket.length)\n  const allNotes = ['a', 'a#', 'b', 'c', 'c#', 'd', 'd#', 'e', 'f', 'f#', 'g', 'g#']\n  const interval = ''\n  // const notesAudio = { a: aAudio, a: bAudio, b: bAudio, b: bAudio, b: bAudio, b: bAudio, b: bAudio, b: bAudio, b: bAudio, b: bAudio, b: bAudio, b: bAudio, b: bAudio}\n\n  // console.log(interval)\n  // let chooseNote = currentNote => {\n  //   return notesAudio[currentNote]\n  // }\n  useEffect((interval) => {\n    if (props.notesBucket.length > 0) {\n      if (props.counter === props.measures) {\n        props.setCounter(0)\n        if (first) {\n          clearInterval(interval)\n          setFirst(true)\n          setRandomNote(props.notesBucket[rand])\n          setCurrentNote(randomNote)\n          const randomNoteString = randomNote.toString()\n          const AudioPlay = new Howl({ src: [noteTones[randomNoteString]] })\n          console.log(randomNoteString)\n          AudioPlay.play()\n          // const AudioPlay = new Audio(noteTones[randomNoteString])\n          // console.log(randomNoteString)\n          // AudioPlay.play()\n        }\n        // setFirst(false)\n        // console.log(props.measures)\n        // console.log(props.setNotesBucket)\n        // console.log(first)\n        // console.log(props.measures % props.setNotesBucket)\n      } else if (props.active) {\n        interval = setInterval(() => {\n          props.setTotal(props.total + 1)\n          props.setCounter(props.counter + 1)\n          const AudioPlay = new Howl({ src: [click3] })\n          AudioPlay.play()\n          // console.log(props.tempo)\n          // console.log(props.tempo * 60)\n          // console.log(props.setNotesBucket)\n        }, 60000 / props.tempo)\n      // // console.log(interval)\n      // setIntervalID(interval)\n      }\n      return () => {\n        // props.setCounter(0)\n        clearInterval(interval)\n      }\n    }\n  }\n  )\n\n  useEffect(() => {\n    clearInterval(interval)\n    props.setCounter(0)\n  }, [props.active])\n\n  useEffect(() => {\n    let i\n    console.log(i)\n    const arr = []\n    // console.log(arr)\n    props.checkedState.map((note, i) => {\n      i++\n      if (note) {\n        arr.push(allNotes[i - 1])\n      }\n      // console.log(note)\n      // console.log(notes[i])\n      return allNotes[i]\n    })\n    // console.log(arr)\n    props.setNotesBucket(arr)\n    // console.log(props.notesBucket)\n  }, [props.checkedState])\n  // }, [props.active === 1])\n  // l\n  // const startMetronome = (event) => {\n  //   event.preventDefault()\n  //   const interval = setInterval(() => {\n  //     props.setCounter(timer + 1)\n  //     console.log(props.tempo)\n  //     console.log(props.tempo * 60)\n  //     console.log(timer)\n  //   }, 60000 / props.tempo)\n  //   console.log(interval)\n  //   // setIntervalID(interval)\n  // }\n  // const stopMetronome = (event) => {\n  //   event.preventDefault()\n  //   // clearInterval(intervalID)\n  // }\n  // const resetCount = (event) => {\n  //   event.preventDefault()\n  //   // props.setCounter(0)\n  // }\n  // useEffect((callback = () => console.log('yup'), tempo = props, errorCallback) => {\n  //   let timeout\n  //   let timeoutID\n  //   const timeInterval = tempo\n  //   let expected\n  //   console.log('timeout: ' + timeout)\n  //   console.log('timeoutID: ' + timeoutID)\n  //   console.log('timeoutInterval: ' + timeInterval)\n  //   console.log('expected: ' + expected)\n  //   const start = (timeout, timeoutID) => {\n  //     expected = Date.now() + timeInterval\n  //     timeout = setTimeout(round, timeInterval)\n  //     timeoutID = timeout\n  //     console.log('Started')\n  //     return timeout\n  //   }\n  //   const round = (timeout, timeoutID) => {\n  //     console.log('round')\n  //     callback()\n  //     const drift = Date.now() - expected\n  //     if (drift > timeInterval) {\n  //       errorCallback()\n  //     }\n  //     console.log(drift)\n  //     console.log(timeInterval - drift)\n  //     expected += timeInterval\n  //     timeout = setTimeout(round, timeInterval - drift)\n  //     timeoutID = timeout\n  //   }\n\n  //   console.log(start)\n  //   console.log(round)\n  //   return (\n  //     clearTimeout(timeoutID)\n  //   )\n  // })\n  // useEffect((callback, tempo = 1000, errorCallback) => {\n  //   let timeout\n  //   let timeoutID\n  //   const timeInterval = tempo\n  //   let expected\n  //   console.log(timeout)\n  //   console.log(timeoutID)\n  //   console.log(timeInterval)\n  //   console.log(expected)\n  //   const start = (timeout, timeoutID) => {\n  //     expected = Date.now() + timeInterval\n  //     timeout = setTimeout(round, timeInterval)\n  //     timeoutID = timeout\n  //     console.log('Started')\n  //     console.log(timeout)\n  //     return timeout\n  //   }\n  //   const round = () => {\n  //     const drift = Date.now() - expected\n  //     if (drift > timeInterval) {\n  //       errorCallback()\n  //     }\n  //     expected += timeInterval\n  //     console.log(drift)\n  //     console.log(timeInterval - drift)\n  //     console.log(timeout)\n  //     timeout = setTimeout(round, timeInterval - drift)\n  //   }\n\n  //   start()\n  //   console.log(round)\n  //   return (\n  //     clearTimeout(timeoutID)\n  //   )\n  // })\n  // useEffect(() => {\n  //   const timer = setTimeout(() => {\n  //     console.log('runner')\n  //     setTimeout(console.log('ran'), 1000)\n  //   }, 1000)\n  //   return () => {\n  //     clearTimeout(timer)\n  //   }\n  // }, [props.active])\n  // useEffect(() => {\n  //   myTimer.start()\n  //   // console.log('success')\n  //   // // why can't i construct this object\n  //   // const myTimer = new Timer(() => { console.log('it ran!') }, 1000)\n  //   return () => {\n  //     myTimer.start()\n  //     console.log('unmounted')\n  //   }\n  // }, [props.active])\n  // console.log(myTimer)\n\n  return (\n    <>\n      <RandomNote counter={props.counter} measures={props.measures} currentNote={currentNote} randomNote={randomNote} setRandomNote={setRandomNote}/>\n      <div className = \"notes\">{props.notesBucket.join(' ').toUpperCase()}</div>\n      <div><BpmDisplay tempo={props.tempo}></BpmDisplay></div>\n      <div><TempoSlider onChange={props.slideTempo} className=\"tempo-settings\" tempo={props.tempo} decreaseTempo={props.decreaseTempo} increaseTempo={props.increaseTempo}></TempoSlider></div>\n      <div><Measures className=\"measures\" counter={props.counter} measures={props.measures} increaseBeats={props.increaseBeats} decreaseBeats={props.decreaseBeats}></Measures></div>\n      <div><StartStop toggleTimer={props.toggleTimer} total = {props.total} active={props.active}/></div>\n      {/* <PresetForm user={props.user} setPresetIndex = {setPresetIndex} loadPreset={loadPreset} measures={props.measures} setMeasures={props.setMeasures} props.notesBucket={props.notesBucket} tempo={props.tempo} setTempo={props.setTempo} counter={counter} setCheckedState={props.setCheckedState} checkedState={props.checkedState}/> */}\n      {/* <PresetForm tempo={props.tempo} measure={props.measures} timer={timer} onSubmit={resetCount}/> */}\n      {/* <PresetForm tempo={props.tempo} measure={props.measures} timer={timer} onSubmit={startMetronome}/> */}\n      {/* <PresetForm tempo={props.tempo} measure={props.measures} timer={timer} onSubmit={stopMetronome}/> */}\n      {/* <div><StartStop toggleTimer={addResource} active={props.active}/></div> */}\n    </>\n  )\n}\n\nexport default Metronome\n","import axios from 'axios'\nimport apiUrl from '../apiConfig'\n\nexport const createPreset = async (current, user) => {\n  console.log(current)\n  console.log(user)\n  console.log(user.token)\n  return axios.post(`${apiUrl}/presets`,\n    {\n      preset: {\n        owner: user,\n        measures: current.measures,\n        tempo: current.tempo,\n        name: current.name,\n        notes: current.notes,\n        checks: current.checks\n      }\n    },\n    {\n      headers: {\n        Authorization: `Bearer ${user.token}`\n      }\n    }\n\n  )\n}\n\nexport const createPost = (title, content, user) => {\n  return axios.post(\n    `${apiUrl}/presets`,\n    { post: { title, content } },\n    // Pass along the authorization which includes our user's token\n    {\n      headers: {\n        Authorization: `Bearer ${user.token}`\n      }\n    }\n  )\n}\n\nexport const updatePreset = async (current, user) => {\n  const presetID = current.id\n  axios.patch(`${apiUrl}/presets/${presetID}`, {\n    preset: {\n      owner: user,\n      measures: current.measures,\n      tempo: current.tempo,\n      name: current.name,\n      notes: current.notes,\n      checks: current.checks\n    }\n  },\n  {\n    headers: {\n      Authorization: `Bearer ${user.token}`\n    }\n  }\n  )\n    .then(response => {\n      console.log(response)\n    })\n    .catch(console.error)\n}\n\nexport const deletePreset = async (current, user) => {\n  const presetID = current.id\n  axios.delete(`${apiUrl}/presets/${presetID}`,\n    {\n      headers: {\n        Authorization: `Bearer ${user.token}`\n      }\n    })\n    .then(response => {\n      console.log(response.data.notes)\n    })\n    .catch(console.error)\n}\n\nexport const deleteAllPresets = async (user) => {\n  axios.delete(`${apiUrl}/presets`,\n    {\n      headers: {\n        Authorization: `Bearer ${user.token}`\n      }\n    })\n    .then(response => {\n      console.log(response.data.notes)\n    })\n    .catch(console.error)\n}\n\nexport const loadPreset = async (current, user) => {\n  const presetID = current.id\n  axios.get(`${apiUrl}/presets/${presetID}`)\n    .then(response => {\n      console.log(response.data.notes)\n    })\n    .catch(console.error)\n}\n\n// export const loadAllPresets = async (user) => {\n//   try {\n//     axios\n//       .get(`${apiUrl}/presets`, {\n//         params: {\n//         // owner: user.token\n//           _id: '622be6a5c8a0d5b0d537f939'\n//         }\n//       })\n//       .then(response => {\n//         console.log(response.data.presets)\n//         console.log(response)\n//         return response\n//       })\n//   } catch (error) { console.error(error) }\n// }\n","// import axios from 'axios'\nimport React, { useEffect, useState } from 'react'\n// import { Link } from 'react-router-dom'\n// import apiUrl from '../../apiConfig'\nimport { createPreset, deletePreset, updatePreset, loadPreset } from '../../api/presets'\nimport axios from 'axios'\nimport apiUrl from '../../apiConfig'\nimport './presetForm.scss'\nconst qs = require('qs')\n\n// import { Link } from 'react-router-dom'\n// const formatDate = () => {\n//   const d = new Date()\n//   return (d.getDay() + 1 + '/' + d.getMonth() + 1 + '/' + d.getUTCFullYear()\n//   )\n// }\n\nconst NotesForm = (props) => {\n  // const [presetIndex, setPresetIndex] = useState(1)\n  // const [presets, setPresets] = useState(['h'])\n  // const [index, setIndex] = useState(document.querySelector('#preset-dropdown').selectedIndex - 1)\n  const [presets, setPresets] = useState([])\n  // console.log(presets)\n  const [presetIndex, setPresetIndex] = useState(0)\n  const [presetName, setPresetName] = useState('default')\n  // const [disabled, setDisabled] = useState(() => (presets.length))\n\n  // const [date] = useState(formatDate())\n  // const handleSubmit = event => {\n  //   event.preventDefault()\n  //   console.log(props.tempo, props.measure)\n  // }\n  // const getFormattedPrice = (price) => `$${price.toFixed(2)}`\n  // const arr = []\n  // presets.map(preset =>\n  //   arr.push(preset))\n  // console.log(arr)\n  const arr = []\n  console.log(arr)\n  // console.log(presetName)\n  const allNotes = ['a', 'a#', 'b', 'c', 'c#', 'd', 'd#', 'e', 'f', 'f#', 'g', 'g#']\n  // const notes = ['a', 'a#', 'b', 'c', 'c#', 'd', 'd#', 'e', 'f', 'f#', 'g#']\n  // const loadPreset = (index) => {\n  //   console.log(index)\n  //   props.setTempo(presets[index].tempo)\n  //   props.setMeasures(presets[index].measures)\n  //   props.setCheckedState(presets[index].notes)\n  // }\n  const loadAllPresets = (user) => {\n    // console.log(user)\n    // console.log(user.token)\n    try {\n      axios\n        .get(`${apiUrl}/presets`, {\n          params: {\n            user: user.token\n          },\n          paramsSerializer: params => {\n            return qs.stringify(params)\n          }\n        },\n        {\n          headers: {\n            Authorization: `Bearer ${user.token}`\n          }\n        })\n        .then(response => {\n          // console.log(response.data.presets)\n          // console.log(response)\n          // console.log(presets)\n          const presetsArray = Object.entries(response.data.presets)\n          // let newPresets = [...presets, presetsArray[400][1]]\n          // newPresets = () => {\n          for (let i = 0; i < presetsArray.length; i++) {\n            setPresets(presets => [...presets, presetsArray[i][1]])\n          }\n          //     // console.log('NEW PRESET')\n          //     // console.log(presets)\n          //     // console.log(presetsArray[i])\n          //     // console.log(presetsArray[i][1])\n          //     // newPresets = [...presets, presetsArray[i][1]]\n          //   }\n          // }\n          // console.log(typeof presetsArray)\n          // console.log(presets)\n          // console.log(presets)\n        })\n    } catch (error) { console.error(error) }\n  }\n\n  useEffect(() => {\n    loadAllPresets(props.user)\n    // setDisabled(() => (presets.length))\n  }, [])\n\n  // let presetsList\n  // // console.log(presetsList)\n  // useEffect((presetsList) => {\n  //   // console.log('ran')\n  //   // console.log(presets)\n  //   presetsList = presets.map((preset) => (\n  //     <li key={preset._id}>\n  //       {preset}\n  //     </li>))\n  //   // console.log(presetsList)\n  //   return presetsList\n  // })\n  // console.log(presetsList)\n\n  const addToPresets = response => {\n    const presetsArray = response.data.preset\n    // console.log(`${presetsArray} presetsarray`)\n    // console.log(presetsArray)\n    const newPresets = [...presets, presetsArray]\n    setPresets(newPresets)\n    // setDisabled(() => (presets.length))\n  }\n\n  const removeFromPresets = () => {\n    const preset = presets[presetIndex]._id\n    // console.log(`${preset} presetToRemove`)\n    // console.log(presets)\n    const newPresets = presets.filter((obj) => {\n      return obj._id !== preset\n    })\n    // const newPresets = [presets.splice(presetIndex)]\n    // console.log(newPresets)\n    setPresets(newPresets)\n    // setDisabled(() => (presets.length))\n    document.getElementById('preset-dropdown').selectedIndex = 0\n    setPresetIndex(0)\n    // console.log(presets)\n  }\n\n  const handleSubmit = (event) => {\n    event.preventDefault()\n    // console.log(props.checkedState)\n    // console.log(presetIndex)\n    const current = {\n      checks: props.checkedState,\n      measures: props.measures,\n      tempo: props.tempo,\n      name: presetName,\n      notes: extractNotes(props.checkedState),\n      index: presetIndex\n    }\n    if (props.user) { current.owner = props.user.token }\n    // console.log(current)\n    switch (event.nativeEvent.submitter.name) {\n    case 'post':\n      createPreset(current, props.user)\n        .then(response => addToPresets(response))\n        // .then(response => console.log(response.data.preset))\n        // .then(response => props.setCheckedState(response.data.notes))\n        .catch(console.error)\n      break\n    case 'delete':\n      // UPDATE TO REMOVE FROM STATE\n      if (presets[0]) {\n        current.id = presets[presetIndex]._id\n        deletePreset(current, props.user)\n          // .then(console.log(presets))\n          // .then(() => setPresets(presets.pop(presetIndex)))\n          // // .then(response => { props.setCheckedState(response.data.notes) })\n          .then(removeFromPresets)\n          // .then(console.log(presets))\n          .catch(console.error)\n      }\n\n      break\n    case 'load':\n      if (presets[0]) {\n        current.id = presets[presetIndex]._id\n        handleSelectNewPreset()\n          .then(loadPreset(current, props.user))\n        // .then(response => { props.setCheckedState(response.data.notes) })\n          .catch(console.error)\n      }\n\n      break\n    case 'edit':\n      if (presets[0]) {\n        current.id = presets[presetIndex]._id\n        updatePreset(current, props.user)\n        // .then(response => { props.setCheckedState(response.data.notes) })\n          .catch(console.error)\n      }\n      break\n    }\n  }\n  // const handlePresetChange = () => {\n  //   console.log('handlepreset')\n  //   // props.loadPreset(document.getElementById('myList').options[document.getElementById('myList').selectedIndex].index)\n  //   // props.setPresetIndex(document.getElementById('myList').options[document.getElementById('myList').selectedIndex].index)\n  // }\n  // const renderedPresets = presets.map(preset => {\n  //   return (\n  //     <li key={preset._id}>\n  //       <Link to={`/presets/${preset._id}`}>\n  //         <h6>{preset.title}</h6>\n  //       </Link>\n  //       <p>{preset.author}</p>\n  //     </li>\n  //   )\n  // })\n\n  // console.log(renderedPresets)\n\n  const handleCheckChange = (position) => {\n    const updatedCheckedState = props.checkedState.map((item, index) =>\n      index === position ? !item : item\n    )\n    // console.log(updatedCheckedState)\n    props.setCheckedState(updatedCheckedState)\n    // console.log(updatedCheckedState.length)\n    // console.log(props.checkedState[1])\n  }\n\n  const handleSelectNewPreset = async () => {\n    // const index = document.querySelector('#preset-dropdown').selectedIndex - 1\n    props.setCheckedState(presets[presetIndex].checks)\n    props.setTempo(presets[presetIndex].tempo)\n    props.setMeasures(presets[presetIndex].measures)\n    setPresetName(presets[presetIndex].name)\n    // document.getElementById('presetName').innerHTML(presetName)\n  }\n\n  const extractNotes = (preset = [props.checkState]) => {\n    // console.log('extractNotes')\n    let i\n    const arr = []\n    console.log(i)\n    // console.log(arr)\n    preset?.map((check, i) => {\n      i++\n      if (check) {\n        arr.push(allNotes[i - 1] + '/')\n      }\n      return check\n    })\n    return (arr.splice(0, arr.length - 0))\n  }\n  // console.log(props.checkedState)\n  // console.log(allNotes)\n  return (\n    <>\n      {/* <form onSubmit={props.onSubmit}>\n        <h2>Hello</h2>\n        <h4>{props.tempo}</h4>\n        <h4>{props.measure}</h4>\n        <button type='submit'>button</button>\n        <h1>{props.counter + 1}</h1>\n      </form> */}\n      <container className=\"settings\">\n        <form className=\"form\" onSubmit={handleSubmit}>\n          {/* {presetsList} */}\n          <div>\n            {allNotes.map(({ name }, index) => {\n              return (\n                <>\n                  {props.presets}\n                  <input key={index}\n                    className=\"checks\"\n                    type=\"checkbox\"\n                    id={`custom-checkbox-${index}`}\n                    name={allNotes[index]}\n                    value={allNotes[index]}\n                    checked={props.checkedState[index]}\n                    onChange={() => handleCheckChange(index, allNotes[index])}\n                  />\n                  <label htmlFor={`custom-checkbox-${index}`}>{allNotes[index].toUpperCase()}{' '}</label>\n                </>\n              )\n            })}\n          </div>\n        </form>\n      </container>\n    </>\n  )\n}\n\n// const PresetForm = ({ book, handleChange, handleSubmit, cancelUrl }) => {\n//   <>\n//     <form onSubmit={handleSubmit}>\n//       <label htmlFor={'title'}>Title</label>\n//       <input\n//         id={'title'}\n//         // value represents what is in state\n//         value={book.title}\n//         // when the input changes -- state is updated\n//         onChange={handleChange}\n//         name='title'\n//       />\n\n//       <label htmlFor='author'>Author:</label>\n//       <input\n//         id='author'\n//         value={book.author}\n//         onChange={handleChange}\n//         name='author'\n//       />\n\n//       <button type='submit'>SUBMIT TO THE FORM</button>\n//     </form>\n\n//     <Link to={cancelUrl}>GET ME OUTTA HERE!!!!</Link>\n//   </>\n// }\n\nexport default NotesForm\n","import React, { useEffect } from 'react'\n\nconst DropDown = props => {\n  // const [presets] = useState(props.presets)\n  //   useEffect(() => presetsList(), [props.presets])\n  //   const presetsList = props.presets.length > 0 &&\n  //     props.presets.map((preset, i) => {\n  //       return (\n  //         <option key={i} value={preset.id}>{preset.name}</option>\n  //       )\n  //     })\n\n  //   useEffect(() => {\n  //     for (const [index, [notes, , owner, measures, tempo, name]] of Object.entries(props.presets)) {\n  //       console.log(props.presets[index])\n  //       console.log(props.presets[notes])\n  //       console.log(props.presets[measures])\n  //       console.log(props.presets[owner])\n  //       console.log(index[0])\n  //       console.log(notes[0] + ': ' + notes[1])\n  //       console.log(owner[0] + ': ' + owner[1])\n  //       console.log(measures[0] + ': ' + measures[1])\n  //       console.log(tempo[0] + ': ' + tempo[1])\n  //       console.log(name[0] + ': ' + name[1])\n  //       presetsList.push(name[1])\n  //       console.log(presetsList)\n  //     }\n  //     return presetsList\n  //   }\n  //   )\n  useEffect(() => {\n    // console.log(presets)\n    // const presetsArray = props.presets?.map((preset, i = 0) => {\n    //   i++\n    //   return (\n    //     <option key = {preset._id}>{i}.{preset[6][1]}_{preset[5][1]}/{preset[4][1]}_{preset[1][1]}_{preset[2][1]}</option>\n    //   )\n    //\n    //\n    //\n    // return (\n    //   <option key = {preset._id}>{i}. {preset[2][1]}_{preset[5][1]}/{preset[4][1]}_{preset[1][1]}_{preset[2][1]}</option>\n    // )\n    // })\n  }, [])\n\n  const handleChange = () => {\n    // console.log(document.getElementById('preset-dropdown').selectedIndex)\n    props.setPresetIndex(document.getElementById('preset-dropdown').selectedIndex)\n  }\n  return (\n    <>\n      {props.presetIndex}\n      <div key={props.presets.length}>\n        {/* <h2>{props.presets[1]}</h2> */}\n        {/* <h2>{() => presetsList}</h2> */}\n        {/* <h2>{presetsList}</h2> */}\n        {/* {props.presets[4]} */}\n        {/* {props.presets} */}\n        <select id = \"preset-dropdown\" onChange={handleChange}>\n          {/* <option hidden>Select A Preset</option> */}\n          {props.presets.map(({ name, tempo, measures, notes }, i = 0) => {\n            // console.log(presets)\n            i++\n            // console.log(presets[i])\n            return (\n              <>\n                {/* {console.log(presets)}\n                {console.log(presets)} */}\n                {/* {console.log()} */}\n                <option key={i}>Name: {name}__{tempo}/{measures}__{notes}</option>\n              </>\n            )\n          })}\n        </select>\n      </div>\n    </>\n  )\n}\n\nexport default DropDown\n","// import axios from 'axios'\nimport React, { useEffect, useState } from 'react'\n// import { Link } from 'react-router-dom'\n// import apiUrl from '../../apiConfig'\nimport { createPreset, deletePreset, updatePreset, loadPreset } from '../../api/presets'\nimport DropDown from './DropDown'\nimport axios from 'axios'\nimport apiUrl from '../../apiConfig'\nimport './presetForm.scss'\nconst qs = require('qs')\n\n// import { Link } from 'react-router-dom'\n// const formatDate = () => {\n//   const d = new Date()\n//   return (d.getDay() + 1 + '/' + d.getMonth() + 1 + '/' + d.getUTCFullYear()\n//   )\n// }\n\nconst PresetsForm = (props) => {\n  // const [presetIndex, setPresetIndex] = useState(1)\n  // const [presets, setPresets] = useState(['h'])\n  // const [index, setIndex] = useState(document.querySelector('#preset-dropdown').selectedIndex - 1)\n  const [presets, setPresets] = useState([])\n  // console.log(presets)\n  const [presetIndex, setPresetIndex] = useState(0)\n  const [presetName, setPresetName] = useState('default')\n  // const [disabled, setDisabled] = useState(() => (presets.length))\n\n  // const [date] = useState(formatDate())\n  // const handleSubmit = event => {\n  //   event.preventDefault()\n  //   console.log(props.tempo, props.measure)\n  // }\n  // const getFormattedPrice = (price) => `$${price.toFixed(2)}`\n  // const arr = []\n  // presets.map(preset =>\n  //   arr.push(preset))\n  // console.log(arr)\n  const arr = []\n  console.log(arr)\n  // console.log(presetName)\n  const allNotes = ['a', 'a#', 'b', 'c', 'c#', 'd', 'd#', 'e', 'f', 'f#', 'g', 'g#']\n  // const notes = ['a', 'a#', 'b', 'c', 'c#', 'd', 'd#', 'e', 'f', 'f#', 'g#']\n  // const loadPreset = (index) => {\n  //   console.log(index)\n  //   props.setTempo(presets[index].tempo)\n  //   props.setMeasures(presets[index].measures)\n  //   props.setCheckedState(presets[index].notes)\n  // }\n  const loadAllPresets = (user) => {\n    // console.log(user)\n    // console.log(user.token)\n    try {\n      axios\n        .get(`${apiUrl}/presets`, {\n          params: {\n            user: user.token\n          },\n          paramsSerializer: params => {\n            return qs.stringify(params)\n          }\n        },\n        {\n          headers: {\n            Authorization: `Bearer ${user.token}`\n          }\n        })\n        .then(response => {\n          // console.log(response.data.presets)\n          // console.log(response)\n          // console.log(presets)\n          const presetsArray = Object.entries(response.data.presets)\n          // let newPresets = [...presets, presetsArray[400][1]]\n          // newPresets = () => {\n          for (let i = 0; i < presetsArray.length; i++) {\n            setPresets(presets => [...presets, presetsArray[i][1]])\n          }\n          //     // console.log('NEW PRESET')\n          //     // console.log(presets)\n          //     // console.log(presetsArray[i])\n          //     // console.log(presetsArray[i][1])\n          //     // newPresets = [...presets, presetsArray[i][1]]\n          //   }\n          // }\n          // console.log(typeof presetsArray)\n          // console.log(presets)\n          // console.log(presets)\n        })\n    } catch (error) { console.error(error) }\n  }\n\n  useEffect(() => {\n    loadAllPresets(props.user)\n    // setDisabled(() => (presets.length))\n  }, [])\n\n  // let presetsList\n  // // console.log(presetsList)\n  // useEffect((presetsList) => {\n  //   // console.log('ran')\n  //   // console.log(presets)\n  //   presetsList = presets.map((preset) => (\n  //     <li key={preset._id}>\n  //       {preset}\n  //     </li>))\n  //   // console.log(presetsList)\n  //   return presetsList\n  // })\n  // console.log(presetsList)\n\n  const addToPresets = response => {\n    const presetsArray = response.data.preset\n    // console.log(`${presetsArray} presetsarray`)\n    // console.log(presetsArray)\n    const newPresets = [...presets, presetsArray]\n    setPresets(newPresets)\n    // setDisabled(() => (presets.length))\n  }\n\n  const removeFromPresets = () => {\n    const preset = presets[presetIndex]._id\n    // console.log(`${preset} presetToRemove`)\n    // console.log(presets)\n    const newPresets = presets.filter((obj) => {\n      return obj._id !== preset\n    })\n    // const newPresets = [presets.splice(presetIndex)]\n    // console.log(newPresets)\n    setPresets(newPresets)\n    // setDisabled(() => (presets.length))\n    document.getElementById('preset-dropdown').selectedIndex = 0\n    setPresetIndex(0)\n    // console.log(presets)\n  }\n\n  const handleSubmit = (event) => {\n    event.preventDefault()\n    // console.log(props.checkedState)\n    // console.log(presetIndex)\n    const current = {\n      checks: props.checkedState,\n      measures: props.measures,\n      tempo: props.tempo,\n      name: presetName,\n      notes: extractNotes(props.checkedState),\n      index: presetIndex\n    }\n    if (props.user) { current.owner = props.user.token }\n    // console.log(current)\n    switch (event.nativeEvent.submitter.name) {\n    case 'post':\n      createPreset(current, props.user)\n        .then(response => addToPresets(response))\n        // .then(response => console.log(response.data.preset))\n        // .then(response => props.setCheckedState(response.data.notes))\n        .catch(console.error)\n      break\n    case 'delete':\n      // UPDATE TO REMOVE FROM STATE\n      if (presets[0]) {\n        current.id = presets[presetIndex]._id\n        deletePreset(current, props.user)\n          // .then(console.log(presets))\n          // .then(() => setPresets(presets.pop(presetIndex)))\n          // // .then(response => { props.setCheckedState(response.data.notes) })\n          .then(removeFromPresets)\n          // .then(console.log(presets))\n          .catch(console.error)\n      }\n\n      break\n    case 'load':\n      if (presets[0]) {\n        current.id = presets[presetIndex]._id\n        handleSelectNewPreset()\n          .then(loadPreset(current, props.user))\n        // .then(response => { props.setCheckedState(response.data.notes) })\n          .catch(console.error)\n      }\n\n      break\n    case 'edit':\n      if (presets[0]) {\n        current.id = presets[presetIndex]._id\n        updatePreset(current, props.user)\n        // .then(response => { props.setCheckedState(response.data.notes) })\n          .catch(console.error)\n      }\n      break\n    }\n  }\n  // const handlePresetChange = () => {\n  //   console.log('handlepreset')\n  //   // props.loadPreset(document.getElementById('myList').options[document.getElementById('myList').selectedIndex].index)\n  //   // props.setPresetIndex(document.getElementById('myList').options[document.getElementById('myList').selectedIndex].index)\n  // }\n  // const renderedPresets = presets.map(preset => {\n  //   return (\n  //     <li key={preset._id}>\n  //       <Link to={`/presets/${preset._id}`}>\n  //         <h6>{preset.title}</h6>\n  //       </Link>\n  //       <p>{preset.author}</p>\n  //     </li>\n  //   )\n  // })\n\n  // console.log(renderedPresets)\n\n  const handleCheckChange = (position) => {\n    const updatedCheckedState = props.checkedState.map((item, index) =>\n      index === position ? !item : item\n    )\n    // console.log(updatedCheckedState)\n    props.setCheckedState(updatedCheckedState)\n    // console.log(updatedCheckedState.length)\n    // console.log(props.checkedState[1])\n  }\n\n  const handleSelectNewPreset = async () => {\n    // const index = document.querySelector('#preset-dropdown').selectedIndex - 1\n    props.setCheckedState(presets[presetIndex].checks)\n    props.setTempo(presets[presetIndex].tempo)\n    props.setMeasures(presets[presetIndex].measures)\n    setPresetName(presets[presetIndex].name)\n    // document.getElementById('presetName').innerHTML(presetName)\n  }\n\n  const handlePresetNameChange = (event) => {\n    let updatedPreset\n    if (event.nativeEvent.data) {\n      updatedPreset = presetName + event.nativeEvent.data\n      // console.log(updatedPreset)\n    } else {\n      updatedPreset = presetName.substring(0, presetName.length - 1)\n    }\n    setPresetName(updatedPreset)\n  }\n  const extractNotes = (preset = [props.checkState]) => {\n    // console.log('extractNotes')\n    let i\n    const arr = []\n    console.log(i)\n    // console.log(arr)\n    preset?.map((check, i) => {\n      i++\n      if (check) {\n        arr.push(allNotes[i - 1] + '/')\n      }\n      return check\n    })\n    return (arr.splice(0, arr.length - 0))\n  }\n  // console.log(props.checkedState)\n  // console.log(allNotes)\n  return (\n    <>\n      {/* <form onSubmit={props.onSubmit}>\n        <h2>Hello</h2>\n        <h4>{props.tempo}</h4>\n        <h4>{props.measure}</h4>\n        <button type='submit'>button</button>\n        <h1>{props.counter + 1}</h1>\n      </form> */}\n      <container className=\"settings\">\n        <form className=\"form\" onSubmit={handleSubmit}>\n          {/* {presetsList} */}\n          <div>\n            {allNotes.map(({ name }, index) => {\n              return (\n                <>\n                  {props.presets}\n                  <input key={index}\n                    className=\"checks\"\n                    type=\"checkbox\"\n                    id={`custom-checkbox-${index}`}\n                    name={allNotes[index]}\n                    value={allNotes[index]}\n                    checked={props.checkedState[index]}\n                    onChange={() => handleCheckChange(index, allNotes[index])}\n                  />\n                  <label htmlFor={`custom-checkbox-${index}`}>{allNotes[index].toUpperCase()}{' '}</label>\n                </>\n              )\n            })}\n          </div>\n          {/* {document.querySelector} */}\n          {/* {presetsList} */}\n          {/* {console.log(presetIndex)} */}\n          {/* {presetIndex} */}\n          {/* {props.tempo} */}\n          <b> select a preset </b>\n          {() => (presets.length)}\n          <div><DropDown extractNotes={extractNotes} presets={presets} tempo={props.tempo}presetIndex={presetIndex}setPresetIndex={setPresetIndex} setPresets={setPresets}/><div className= \"submitButtons\"><button name='load' type='submit' className='presetButtons' >Load</button><button name='edit' type='submit' className='presetButtons' >Update</button><button name='delete' type='submit' className='presetButtons' >Delete</button></div><input id='presetName' value={presetName} onChange = {handlePresetNameChange}></input><button name='post' type='submit'>Save As</button></div>\n        </form>\n      </container>\n    </>\n  )\n}\n\n// const PresetForm = ({ book, handleChange, handleSubmit, cancelUrl }) => {\n//   <>\n//     <form onSubmit={handleSubmit}>\n//       <label htmlFor={'title'}>Title</label>\n//       <input\n//         id={'title'}\n//         // value represents what is in state\n//         value={book.title}\n//         // when the input changes -- state is updated\n//         onChange={handleChange}\n//         name='title'\n//       />\n\n//       <label htmlFor='author'>Author:</label>\n//       <input\n//         id='author'\n//         value={book.author}\n//         onChange={handleChange}\n//         name='author'\n//       />\n\n//       <button type='submit'>SUBMIT TO THE FORM</button>\n//     </form>\n\n//     <Link to={cancelUrl}>GET ME OUTTA HERE!!!!</Link>\n//   </>\n// }\n\nexport default PresetsForm\n","/* eslint-disable no-tabs */\nimport React, { useState } from 'react'\nimport { Route, Routes } from 'react-router-dom'\nimport { v4 as uuid } from 'uuid'\nimport './index.scss'\n\nimport AutoDismissAlert from './components/AutoDismissAlert/AutoDismissAlert'\nimport Header from './components/Header/Header'\nimport SignUp from './components/auth/SignUp'\nimport SignIn from './components/auth/SignIn'\nimport SignOut from './components/auth/SignOut'\nimport ChangePassword from './components/auth/ChangePassword'\n\nimport Metronome from './components/Metronome/Metronome'\nimport NotesForm from './components/Presets/NotesForm'\nimport PresetsForm from './components/Presets/PresetsForm'\n\nconst App = () => {\n  const [user, setUser] = useState(null)\n  const [msgAlerts, setMsgAlerts] = useState([])\n  const [tempo, setTempo] = useState(120)\n  const [measures, setMeasures] = useState(4)\n  const [active, setActive] = useState(0)\n  const [checkedState, setCheckedState] = useState([true, true, true, true, true, true, true, true, true, true, true, true])\n  const [total, setTotal] = useState(0)\n  const [notesBucket, setNotesBucket] = useState(['a', 'a#', 'b', 'c', 'c#', 'd', 'd#', 'e', 'f', 'f#', 'g', 'g#'])\n  const [counter, setCounter] = useState(1)\n  // console.log(setMeasures)\n  // console.log(setTempo)\n\n  const clearUser = () => setUser(null)\n\n  const msgAlert = ({ heading, message, variant }) => {\n    const id = uuid()\n    setMsgAlerts(msgAlerts => ([...msgAlerts, { heading, message, variant, id }]))\n  }\n\n  // const tempoDisplay = document.querySelector('.tempo')\n  // console.log(tempoDisplay)\n  // const tempoText = document.querySelector('.tempo-text')\n  // console.log(tempoText)\n  // const decreaseTempoBtn = document.querySelector('.decrease-tempo')\n  // console.log(decreaseTempoBtn)\n  // const increaseTempoBtn = document.querySelector('.increase-tempo-button')\n  // console.log(increaseTempoBtn)\n  const tempoSlider = document.querySelector('.slider')\n  // console.log(tempoSlider)\n  // const startStopBtn = document.querySelector('.start-stop-button')\n  // console.log(startStopBtn)\n  // const subtractBeats = document.querySelector('.subtract-beats')\n  // console.log(subtractBeats)\n  // const addBeats = document.querySelector('.add-beats')\n  // // console.log(addBeats)\n  // const BpmDisplayElement = document.querySelector('.bpm-display')\n  // console.log(BpmDisplayElement)\n  // const metronome = { but: 'that' }\n  // console.log(metronome)\n  // const beatsDisplay = document.querySelector('.beats-display')\n  // console.log(beatsDisplay)\n  // while (active) {\n  //   setActive(0)\n  // }\n\n  const decreaseTempo = () => {\n    if (tempo < 20) {\n      return true\n    } else {\n      setTempo(tempo => tempo - 1)\n    }\n  }\n\n  const increaseTempo = () => {\n    if (tempo > 240) {\n      return true\n    } else {\n      setTempo(tempo => tempo + 1)\n    }\n  }\n\n  const decreaseBeats = () => {\n    if (measures <= 2) {\n      return true\n    } else {\n      setMeasures(measures => measures - 1)\n    }\n  }\n\n  const increaseBeats = () => {\n    if (measures >= 8) {\n      return true\n    } else {\n      setMeasures(measures => measures + 1)\n    }\n  }\n\n  const slideTempo = () => {\n    setTempo(parseInt(tempoSlider.value))\n  }\n\n  const toggleTimer = () => {\n    let stat = active\n    switch (active) {\n    case 0:\n      stat = 1\n      // myTimer.start()\n      break\n    default:\n      stat = 0\n      // myTimer.stop()\n      break\n    }\n    setActive(stat)\n    setTotal(0)\n  }\n  // if (active === 0) {\n  //   myTimer.stop()\n  // } else {\n  //   myTimer.start()\n  // }\n  // console.log(myTimer)\n\n  // const stopTimer = () => {\n  //   myTimer.start()\n  // }\n  // console.log(startTimer)\n  // console.log(stopTimer)\n\n  return (\n    <>\n      <Header user={user} />\n      {msgAlerts.map(msgAlert => (\n        <AutoDismissAlert\n          key={msgAlert.id}\n          heading={msgAlert.heading}\n          variant={msgAlert.variant}\n          message={msgAlert.message}\n          id={msgAlert.id}\n        />\n      ))}\n      <main className='container'>\n        <Routes>\n          <Route\n            path='/sign-up'\n            element={<SignUp msgAlert={msgAlert} setUser={setUser} /> }\n          />\n          <Route\n            path='/sign-in'\n            element={<SignIn msgAlert={msgAlert} setUser={setUser} /> }\n          />\n          <Route\n            path='/sign-out'\n            element={<SignOut msgAlert={msgAlert} clearUser={clearUser} user={user} /> }\n          />\n          <Route\n            path='/change-password'\n            element={<ChangePassword msgAlert={msgAlert} user={user} /> }\n          />\n          <Route className = \"presets\"\n            path='/settings'\n            element={<NotesForm user={user} measures={measures} setMeasures={setMeasures} notesBucket={notesBucket} tempo={tempo} setTempo={setTempo} counter={counter} setCheckedState={setCheckedState} checkedState={checkedState} msgAlert={msgAlert}/> }\n          />\n          <Route className = \"presets\"\n            path='/presets'\n            element={<PresetsForm\n              user={user} measures={measures} setMeasures={setMeasures} notesBucket={notesBucket} tempo={tempo} setTempo={setTempo} counter={counter} setCheckedState={setCheckedState} checkedState={checkedState} msgAlert={msgAlert}/> }\n          />\n        </Routes>\n      </main>\n      <div className=\"parent\">\n        {checkedState}\n        <div className=\"home\">\n          <Metronome className=\"metronome\"\n            setTempo={setTempo}\n            setMeasures={setMeasures}\n            tempo={tempo}\n            measures={measures}\n            decreaseTempo={decreaseTempo}\n            increaseTempo={increaseTempo}\n            increaseBeats={increaseBeats}\n            decreaseBeats={decreaseBeats}\n            slideTempo={slideTempo}\n            toggleTimer={toggleTimer}\n            user={user}\n            counter={counter}\n            setCounter={setCounter}\n            notesBucket = {notesBucket}\n            setNotesBucket = {setNotesBucket}\n            checkedState={checkedState}\n            setCheckedState={setCheckedState}\n            total={total}\n            setTotal={setTotal}\n            // setCounter = {setCounter}\n            // addResource={addResource}\n            active={active}></Metronome>\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.scss'\n\nimport App from './App'\nimport { BrowserRouter } from 'react-router-dom'\n\nconst appJsx = (\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <App />\n  </BrowserRouter>\n)\n\nReactDOM.render(appJsx, document.getElementById('root'))\n"],"sourceRoot":""}